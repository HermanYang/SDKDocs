# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sdk2/proto/lgf.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sdk2.proto import dtypes_pb2 as sdk2_dot_proto_dot_dtypes__pb2
from sdk2.proto import ops_pb2 as sdk2_dot_proto_dot_ops__pb2
from sdk2.proto import common_pb2 as sdk2_dot_proto_dot_common__pb2
from sdk2.proto import graph_types_pb2 as sdk2_dot_proto_dot_graph__types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='sdk2/proto/lgf.proto',
  package='light',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x14sdk2/proto/lgf.proto\x12\x05light\x1a\x17sdk2/proto/dtypes.proto\x1a\x14sdk2/proto/ops.proto\x1a\x17sdk2/proto/common.proto\x1a\x1csdk2/proto/graph_types.proto\"\xc3\x01\n\x0cOriginalNode\x12\x1b\n\x01t\x18\x01 \x01(\x0e\x32\x10.light.GraphType\x12\x17\n\x0fserialized_node\x18\x02 \x01(\x0c\x12\x15\n\x02op\x18\x03 \x01(\x0e\x32\t.light.Op\x12+\n\x04\x61ttr\x18\x05 \x03(\x0b\x32\x1d.light.OriginalNode.AttrEntry\x1a\x39\n\tAttrEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.light.Param:\x02\x38\x01\")\n\x0cSubgraphNode\x12\x19\n\x05graph\x18\x01 \x01(\x0b\x32\n.light.LGF\"\xa3\x03\n\nMatMulNode\x12\x14\n\x0cturn_off_adc\x18\x05 \x01(\x08\x12-\n\x14hist_keys_before_adc\x18\x06 \x01(\x0b\x32\x0f.light.HistKeys\x12,\n\x13hist_keys_after_adc\x18\x07 \x01(\x0b\x32\x0f.light.HistKeys\x12\x17\n\x0fquant_precision\x18\x0b \x01(\x05\x12\x18\n\x10using_quant_bias\x18\t \x01(\x08\x12\x19\n\x11phasify_is_folded\x18\n \x01(\x08\x12,\n\x0e\x64\x65quant_method\x18\x08 \x01(\x0e\x32\x14.light.DequantMethod\x12\x19\n\x11\x66rom_batch_matmul\x18\x0c \x01(\x08\"\x8a\x01\n\x05index\x12\x0f\n\x0bINPUT_INDEX\x10\x00\x12\x16\n\x12QUANT_PARAMS_INDEX\x10\x01\x12\x10\n\x0cPHASES_INDEX\x10\x02\x12\x18\n\x14\x44\x45QUANT_SCALES_INDEX\x10\x03\x12\x14\n\x10\x41\x44\x43_SCALES_INDEX\x10\x04\x12\x16\n\x12\x44\x45QUANT_BIAS_INDEX\x10\x05\"h\n\x0eLoopMatMulNode\x12\x0c\n\x04loop\x18\x01 \x01(\x05\x12!\n\x06matmul\x18\x02 \x01(\x0b\x32\x11.light.MatMulNode\x12\x12\n\nkeep_trace\x18\x03 \x01(\x08\x12\x11\n\tthreshold\x18\x04 \x01(\x02\"\xae\x02\n\x14ImagePatchAttributes\x12\x13\n\x0bkernel_size\x18\x01 \x03(\x05\x12\x0f\n\x07strides\x18\x02 \x03(\x05\x12\x34\n\x07padding\x18\x03 \x01(\x0e\x32#.light.ImagePatchAttributes.Padding\x12;\n\x0b\x64\x61ta_format\x18\x04 \x01(\x0e\x32&.light.ImagePatchAttributes.DataFormat\"B\n\x07Padding\x12\x13\n\x0fPADDING_INVALID\x10\x00\x12\x08\n\x04SAME\x10\x01\x12\t\n\x05VALID\x10\x02\x12\r\n\tSAME_EVEN\x10\x03\"9\n\nDataFormat\x12\x17\n\x13\x44\x41TA_FORMAT_INVALID\x10\x00\x12\x08\n\x04NHWC\x10\x01\x12\x08\n\x04NCHW\x10\x02\"`\n\nConv2DNode\x12!\n\x06matmul\x18\x01 \x01(\x0b\x32\x11.light.MatMulNode\x12/\n\nimage_attr\x18\x02 \x01(\x0b\x32\x1b.light.ImagePatchAttributes\"E\n BlockDiagonalDepthwiseConv2DNode\x12!\n\x06\x63onv2d\x18\x01 \x01(\x0b\x32\x11.light.Conv2DNode\"C\n\x1e\x44istributedDepthwiseConv2DNode\x12!\n\x06\x63onv2d\x18\x01 \x01(\x0b\x32\x11.light.Conv2DNode\"\xe1\x01\n\x08PoolNode\x12/\n\nimage_attr\x18\x01 \x01(\x0b\x32\x1b.light.ImagePatchAttributes\x12\x31\n\x0cpooling_type\x18\x02 \x01(\x0e\x32\x1b.light.PoolNode.PoolingType\x12\x13\n\x0bquant_scale\x18\x03 \x01(\x02\x12\x17\n\x0fquant_precision\x18\x04 \x01(\x02\"C\n\x0bPoolingType\x12\x18\n\x14POOLING_TYPE_INVALID\x10\x00\x12\x0c\n\x08MAX_POOL\x10\x01\x12\x0c\n\x08\x41VG_POOL\x10\x02\"\x84\x01\n\x12\x46usedBatchNormNode\x12\x0f\n\x07\x65psilon\x18\x05 \x01(\x02\"]\n\x05index\x12\x0f\n\x0bINPUT_INDEX\x10\x00\x12\x0e\n\nMEAN_INDEX\x10\x01\x12\x12\n\x0eVARIANCE_INDEX\x10\x02\x12\x0f\n\x0bSCALE_INDEX\x10\x03\x12\x0e\n\nBIAS_INDEX\x10\x04\"\x1a\n\x07PadNode\x12\x0f\n\x07padding\x18\x01 \x03(\x05\"+\n\x08MeanNode\x12\x0c\n\x04\x61xes\x18\x01 \x03(\x05\x12\x11\n\tkeep_dims\x18\x02 \x01(\x08\"\x1b\n\tSVAddNode\x12\x0e\n\x06scalar\x18\x01 \x01(\x02\"\x1b\n\tSVMulNode\x12\x0e\n\x06scalar\x18\x01 \x01(\x02\"\x1b\n\tSVMaxNode\x12\x0e\n\x06scalar\x18\x01 \x01(\x02\"\x1b\n\tSVMinNode\x12\x0e\n\x06scalar\x18\x01 \x01(\x02\"\x1b\n\tSVPowNode\x12\x0e\n\x06scalar\x18\x01 \x01(\x02\"\x0b\n\tVVAddNode\"\x0b\n\tVVMulNode\"\x0b\n\tVVDivNode\"\x0b\n\tVVMaxNode\"\x0b\n\tVVMinNode\"\x0b\n\tVVSubNode\"\x0e\n\x0cIdentityNode\"\r\n\x0bReshapeNode\"\n\n\x08\x43\x61stNode\")\n\'BlockDiagonalDepthwiseConv2DReshapeNode\"\x1d\n\rTransposeNode\x12\x0c\n\x04\x61xes\x18\x01 \x03(\x05\"\x1b\n\x0bUnstackNode\x12\x0c\n\x04\x61xis\x18\x01 \x01(\x05\"\x19\n\tStackNode\x12\x0c\n\x04\x61xis\x18\x01 \x01(\x05\"\x1a\n\nConcatNode\x12\x0c\n\x04\x61xis\x18\x01 \x01(\x05\"\x19\n\tSplitNode\x12\x0c\n\x04\x61xis\x18\x01 \x01(\x05\"0\n\rReduceSumNode\x12\x0c\n\x04\x61xes\x18\x01 \x03(\x05\x12\x11\n\tkeep_dims\x18\x02 \x01(\x08\"\t\n\x07\x45xpNode\"5\n\x0f\x43ollectHistNode\x12\"\n\thist_keys\x18\x01 \x01(\x0b\x32\x0f.light.HistKeys\">\n\x0cQuantizeNode\x12\r\n\x05scale\x18\x01 \x01(\x02\x12\x11\n\tprecision\x18\x02 \x01(\x05\x12\x0c\n\x04\x62ias\x18\x03 \x01(\x02\"x\n\x0e\x44\x65quantizeNode\x12$\n\x06method\x18\x01 \x01(\x0e\x32\x14.light.DequantMethod\x12\x0c\n\x04\x62ias\x18\x02 \x01(\x02\"2\n\x05index\x12\x0f\n\x0bINPUT_INDEX\x10\x00\x12\x18\n\x14\x44\x45QUANT_SCALES_INDEX\x10\x01\"b\n\x0eRequantizeNode\x12)\n\ndequantize\x18\x01 \x01(\x0b\x32\x15.light.DequantizeNode\x12%\n\x08quantize\x18\x02 \x01(\x0b\x32\x13.light.QuantizeNode\"\xe9\x01\n\x0bPhasifyNode\x12\x11\n\ttranspose\x18\x01 \x01(\x08\"`\n\x0binput_index\x12\x1c\n\x18QUANT_PARAMS_INPUT_INDEX\x10\x00\x12\x17\n\x13WEIGHTS_INPUT_INDEX\x10\x01\x12\x1a\n\x16\x41\x44\x43_SCALES_INPUT_INDEX\x10\x02\"e\n\x0coutput_index\x12\x17\n\x13PHASES_OUTPUT_INDEX\x10\x00\x12\x1f\n\x1b\x44\x45QUANT_SCALES_OUTPUT_INDEX\x10\x01\x12\x1b\n\x17\x41\x44\x43_SCALES_OUTPUT_INDEX\x10\x02\"\xb7\x02\n\tConstNode\x12\x1c\n\x05value\x18\x01 \x01(\x0b\x32\r.light.Tensor\x12.\n\nconst_type\x18\x03 \x01(\x0e\x32\x1a.light.ConstNode.ConstType\x12\x13\n\x0bweight_rows\x18\x04 \x01(\x05\x12\x1e\n\x16non_sparse_weight_rows\x18\x05 \x01(\x05\x12\x1c\n\x14sparse_rows_per_tile\x18\x06 \x01(\x05\x12*\n\rsparsity_type\x18\x07 \x03(\x0e\x32\x13.light.SparsityType\"]\n\tConstType\x12\x0f\n\x0bGRAPH_CONST\x10\x00\x12\r\n\tADC_SCALE\x10\x01\x12\x11\n\rDEQUANT_SCALE\x10\x02\x12\x0b\n\x07WEIGHTS\x10\x03\x12\x10\n\x0c\x44\x45QUANT_BIAS\x10\x04\"\x0e\n\x0cVariableNode\"\xbb\x01\n\x0fLoadWeightsNode\x12\x1c\n\x14sparse_rows_per_tile\x18\x01 \x01(\x05\x12*\n\rsparsity_type\x18\x02 \x03(\x0e\x32\x13.light.SparsityType\x12 \n\nscale_type\x18\x03 \x01(\x0b\x32\x0c.light.DType\x12\"\n\x1ascales_appended_to_weights\x18\x04 \x01(\x08\x12\x18\n\x10using_quant_bias\x18\x05 \x01(\x08\"7\n\x10\x41pplyWeightsNode\x12#\n\x0cquant_params\x18\x01 \x01(\x0b\x32\r.light.Tensor\"\n\n\x08MoveNode\"?\n\x08HaltNode\x12\x11\n\texit_code\x18\x01 \x01(\x05\x12\x0f\n\x07inp_ten\x18\x02 \x01(\t\x12\x0f\n\x07out_ten\x18\x03 \x01(\t\"\n\n\x08NoOpNode\"*\n\nBundleNode\x12\x1c\n\x08subgraph\x18\x01 \x01(\x0b\x32\n.light.LGF\"\x84\x04\n\x13UpdateVariablesNode\x12:\n\x0bupdate_info\x18\x01 \x01(\x0b\x32%.light.UpdateVariablesNode.UpdateInfo\x1a \n\x11UpdateQuantParams\x12\x0b\n\x03key\x18\x01 \x01(\x05\x1a\x1f\n\x0fUpdateADCScales\x12\x0c\n\x04keys\x18\x01 \x03(\x05\x1a\xed\x02\n\nUpdateInfo\x12L\n\x0cvariable_map\x18\x01 \x03(\x0b\x32\x36.light.UpdateVariablesNode.UpdateInfo.VariableMapEntry\x1a\xaa\x01\n\nUpdateType\x12K\n\x13update_quant_params\x18\x01 \x01(\x0b\x32,.light.UpdateVariablesNode.UpdateQuantParamsH\x00\x12G\n\x11update_adc_scales\x18\x02 \x01(\x0b\x32*.light.UpdateVariablesNode.UpdateADCScalesH\x00\x42\x06\n\x04type\x1a\x64\n\x10VariableMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12?\n\x05value\x18\x02 \x01(\x0b\x32\x30.light.UpdateVariablesNode.UpdateInfo.UpdateType:\x02\x38\x01\"\x19\n\x08\x46illNode\x12\r\n\x05value\x18\x01 \x01(\x02\"\n\n\x08TileNode\"R\n\x16QuantizationParameters\x12\x1b\n\x13quantized_dimension\x18\x01 \x01(\x05\x12\r\n\x05scale\x18\x02 \x03(\x02\x12\x0c\n\x04\x62ias\x18\x03 \x03(\x02\"\x9b\x01\n\x08\x45\x64geInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x1b\n\x05\x64type\x18\x03 \x01(\x0b\x32\x0c.light.DType\x12!\n\x05shape\x18\x04 \x01(\x0b\x32\x12.light.TensorShape\x12\x33\n\x0cquant_params\x18\x05 \x01(\x0b\x32\x1d.light.QuantizationParameters\"\xe6\x10\n\x03LNF\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1f\n\x06inputs\x18\x02 \x03(\x0b\x32\x0f.light.EdgeInfo\x12\x16\n\x0e\x63ontrol_inputs\x18% \x03(\t\x12 \n\x07outputs\x18\x03 \x03(\x0b\x32\x0f.light.EdgeInfo\x12\x11\n\tsupported\x18\x04 \x01(\x08\x12\'\n\x08original\x18\x05 \x01(\x0b\x32\x13.light.OriginalNodeH\x00\x12\'\n\x08subgraph\x18\x06 \x01(\x0b\x32\x13.light.SubgraphNodeH\x00\x12#\n\x06matmul\x18\x07 \x01(\x0b\x32\x11.light.MatMulNodeH\x00\x12#\n\x06\x63onv2d\x18\x08 \x01(\x0b\x32\x11.light.Conv2DNodeH\x00\x12,\n\x0bloop_matmul\x18& \x01(\x0b\x32\x15.light.LoopMatMulNodeH\x00\x12R\n\x1f\x62lock_diagonal_depthwise_conv2d\x18+ \x01(\x0b\x32\'.light.BlockDiagonalDepthwiseConv2DNodeH\x00\x12M\n\x1c\x64istributed_depthwise_conv2d\x18- \x01(\x0b\x32%.light.DistributedDepthwiseConv2DNodeH\x00\x12\x1f\n\x04pool\x18\t \x01(\x0b\x32\x0f.light.PoolNodeH\x00\x12.\n\tbatchnorm\x18\n \x01(\x0b\x32\x19.light.FusedBatchNormNodeH\x00\x12\x1d\n\x03pad\x18\x0b \x01(\x0b\x32\x0e.light.PadNodeH\x00\x12\x1f\n\x04mean\x18\x0c \x01(\x0b\x32\x0f.light.MeanNodeH\x00\x12\"\n\x06sv_add\x18\x0e \x01(\x0b\x32\x10.light.SVAddNodeH\x00\x12\"\n\x06sv_mul\x18\x0f \x01(\x0b\x32\x10.light.SVMulNodeH\x00\x12\"\n\x06sv_max\x18\x10 \x01(\x0b\x32\x10.light.SVMaxNodeH\x00\x12\"\n\x06sv_min\x18\" \x01(\x0b\x32\x10.light.SVMinNodeH\x00\x12\"\n\x06sv_pow\x18\x35 \x01(\x0b\x32\x10.light.SVPowNodeH\x00\x12\"\n\x06vv_add\x18\x11 \x01(\x0b\x32\x10.light.VVAddNodeH\x00\x12\"\n\x06vv_mul\x18\x12 \x01(\x0b\x32\x10.light.VVMulNodeH\x00\x12\"\n\x06vv_div\x18\x32 \x01(\x0b\x32\x10.light.VVDivNodeH\x00\x12\"\n\x06vv_max\x18\x13 \x01(\x0b\x32\x10.light.VVMaxNodeH\x00\x12\"\n\x06vv_min\x18# \x01(\x0b\x32\x10.light.VVMinNodeH\x00\x12\"\n\x06vv_sub\x18\x34 \x01(\x0b\x32\x10.light.VVSubNodeH\x00\x12\'\n\x08identity\x18\x14 \x01(\x0b\x32\x13.light.IdentityNodeH\x00\x12%\n\x07reshape\x18\x15 \x01(\x0b\x32\x12.light.ReshapeNodeH\x00\x12\x1f\n\x04\x63\x61st\x18\x16 \x01(\x0b\x32\x0f.light.CastNodeH\x00\x12\x61\n\'block_diagonal_depthwise_conv2d_reshape\x18* \x01(\x0b\x32..light.BlockDiagonalDepthwiseConv2DReshapeNodeH\x00\x12)\n\ttranspose\x18. \x01(\x0b\x32\x14.light.TransposeNodeH\x00\x12*\n\nreduce_sum\x18\x30 \x01(\x0b\x32\x14.light.ReduceSumNodeH\x00\x12\x1d\n\x03\x65xp\x18\x31 \x01(\x0b\x32\x0e.light.ExpNodeH\x00\x12%\n\x07unstack\x18\x33 \x01(\x0b\x32\x12.light.UnstackNodeH\x00\x12\x1f\n\x04\x66ill\x18\x36 \x01(\x0b\x32\x0f.light.FillNodeH\x00\x12!\n\x05stack\x18\x37 \x01(\x0b\x32\x10.light.StackNodeH\x00\x12\x1f\n\x04tile\x18\x38 \x01(\x0b\x32\x0f.light.TileNodeH\x00\x12#\n\x06\x63oncat\x18\x39 \x01(\x0b\x32\x11.light.ConcatNodeH\x00\x12!\n\x05split\x18: \x01(\x0b\x32\x10.light.SplitNodeH\x00\x12.\n\x0c\x63ollect_hist\x18\x17 \x01(\x0b\x32\x16.light.CollectHistNodeH\x00\x12\'\n\x08quantize\x18\x18 \x01(\x0b\x32\x13.light.QuantizeNodeH\x00\x12+\n\ndequantize\x18\x19 \x01(\x0b\x32\x15.light.DequantizeNodeH\x00\x12+\n\nrequantize\x18\x1a \x01(\x0b\x32\x15.light.RequantizeNodeH\x00\x12%\n\x07phasify\x18( \x01(\x0b\x32\x12.light.PhasifyNodeH\x00\x12!\n\x05\x63onst\x18\x1b \x01(\x0b\x32\x10.light.ConstNodeH\x00\x12\'\n\x08variable\x18) \x01(\x0b\x32\x13.light.VariableNodeH\x00\x12%\n\x03ldw\x18/ \x01(\x0b\x32\x16.light.LoadWeightsNodeH\x00\x12&\n\x03\x61pw\x18\x1c \x01(\x0b\x32\x17.light.ApplyWeightsNodeH\x00\x12\x1f\n\x04move\x18\x1d \x01(\x0b\x32\x0f.light.MoveNodeH\x00\x12\x1f\n\x04halt\x18\x1f \x01(\x0b\x32\x0f.light.HaltNodeH\x00\x12\x1f\n\x04noop\x18  \x01(\x0b\x32\x0f.light.NoOpNodeH\x00\x12#\n\x06\x62undle\x18! \x01(\x0b\x32\x11.light.BundleNodeH\x00\x12\x36\n\x10update_variables\x18\' \x01(\x0b\x32\x1a.light.UpdateVariablesNodeH\x00\x42\x06\n\x04node\"\xb9\x01\n\rMetaGraphInfo\x12H\n\x13original_graph_info\x18\x01 \x03(\x0b\x32+.light.MetaGraphInfo.OriginalGraphInfoEntry\x12\x16\n\x0erequired_nodes\x18\x02 \x03(\t\x1a\x46\n\x16OriginalGraphInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.light.Param:\x02\x38\x01\"\xb7\x01\n\x03LGF\x12\x19\n\x05nodes\x18\x01 \x03(\x0b\x32\n.light.LNF\x12$\n\x0binput_edges\x18\x03 \x03(\x0b\x32\x0f.light.EdgeInfo\x12%\n\x0coutput_edges\x18\x04 \x03(\x0b\x32\x0f.light.EdgeInfo\x12\x19\n\x11output_node_names\x18\x06 \x03(\t\x12-\n\x0fmeta_graph_info\x18\x05 \x01(\x0b\x32\x14.light.MetaGraphInfo*h\n\rDequantMethod\x12\x0e\n\nDQ_INVALID\x10\x00\x12\x0b\n\x07\x44Q_NONE\x10\x01\x12\x0f\n\x0b\x44Q_STANDARD\x10\x02\x12\x10\n\x0c\x44Q_THRESHOLD\x10\x03\x12\x17\n\x13\x44Q_ANALOG_THRESHOLD\x10\x04*V\n\x0cSparsityType\x12\x12\n\x0eSPARSE_INVALID\x10\x00\x12\x0f\n\x0bSPARSE_NONE\x10\x01\x12\x0e\n\nSPARSE_TOP\x10\x02\x12\x11\n\rSPARSE_BOTTOM\x10\x03\x62\x06proto3')
  ,
  dependencies=[sdk2_dot_proto_dot_dtypes__pb2.DESCRIPTOR,sdk2_dot_proto_dot_ops__pb2.DESCRIPTOR,sdk2_dot_proto_dot_common__pb2.DESCRIPTOR,sdk2_dot_proto_dot_graph__types__pb2.DESCRIPTOR,])

_DEQUANTMETHOD = _descriptor.EnumDescriptor(
  name='DequantMethod',
  full_name='light.DequantMethod',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DQ_INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DQ_NONE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DQ_STANDARD', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DQ_THRESHOLD', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DQ_ANALOG_THRESHOLD', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7007,
  serialized_end=7111,
)
_sym_db.RegisterEnumDescriptor(_DEQUANTMETHOD)

DequantMethod = enum_type_wrapper.EnumTypeWrapper(_DEQUANTMETHOD)
_SPARSITYTYPE = _descriptor.EnumDescriptor(
  name='SparsityType',
  full_name='light.SparsityType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPARSE_INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPARSE_NONE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPARSE_TOP', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPARSE_BOTTOM', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7113,
  serialized_end=7199,
)
_sym_db.RegisterEnumDescriptor(_SPARSITYTYPE)

SparsityType = enum_type_wrapper.EnumTypeWrapper(_SPARSITYTYPE)
DQ_INVALID = 0
DQ_NONE = 1
DQ_STANDARD = 2
DQ_THRESHOLD = 3
DQ_ANALOG_THRESHOLD = 4
SPARSE_INVALID = 0
SPARSE_NONE = 1
SPARSE_TOP = 2
SPARSE_BOTTOM = 3


_MATMULNODE_INDEX = _descriptor.EnumDescriptor(
  name='index',
  full_name='light.MatMulNode.index',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INPUT_INDEX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUANT_PARAMS_INDEX', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHASES_INDEX', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_SCALES_INDEX', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_SCALES_INDEX', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_BIAS_INDEX', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=656,
  serialized_end=794,
)
_sym_db.RegisterEnumDescriptor(_MATMULNODE_INDEX)

_IMAGEPATCHATTRIBUTES_PADDING = _descriptor.EnumDescriptor(
  name='Padding',
  full_name='light.ImagePatchAttributes.Padding',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PADDING_INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAME', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALID', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAME_EVEN', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1080,
  serialized_end=1146,
)
_sym_db.RegisterEnumDescriptor(_IMAGEPATCHATTRIBUTES_PADDING)

_IMAGEPATCHATTRIBUTES_DATAFORMAT = _descriptor.EnumDescriptor(
  name='DataFormat',
  full_name='light.ImagePatchAttributes.DataFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DATA_FORMAT_INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NHWC', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NCHW', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1148,
  serialized_end=1205,
)
_sym_db.RegisterEnumDescriptor(_IMAGEPATCHATTRIBUTES_DATAFORMAT)

_POOLNODE_POOLINGTYPE = _descriptor.EnumDescriptor(
  name='PoolingType',
  full_name='light.PoolNode.PoolingType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='POOLING_TYPE_INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX_POOL', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_POOL', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1604,
  serialized_end=1671,
)
_sym_db.RegisterEnumDescriptor(_POOLNODE_POOLINGTYPE)

_FUSEDBATCHNORMNODE_INDEX = _descriptor.EnumDescriptor(
  name='index',
  full_name='light.FusedBatchNormNode.index',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INPUT_INDEX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEAN_INDEX', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VARIANCE_INDEX', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALE_INDEX', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIAS_INDEX', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1713,
  serialized_end=1806,
)
_sym_db.RegisterEnumDescriptor(_FUSEDBATCHNORMNODE_INDEX)

_DEQUANTIZENODE_INDEX = _descriptor.EnumDescriptor(
  name='index',
  full_name='light.DequantizeNode.index',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INPUT_INDEX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_SCALES_INDEX', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2582,
  serialized_end=2632,
)
_sym_db.RegisterEnumDescriptor(_DEQUANTIZENODE_INDEX)

_PHASIFYNODE_INPUT_INDEX = _descriptor.EnumDescriptor(
  name='input_index',
  full_name='light.PhasifyNode.input_index',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='QUANT_PARAMS_INPUT_INDEX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WEIGHTS_INPUT_INDEX', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_SCALES_INPUT_INDEX', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2769,
  serialized_end=2865,
)
_sym_db.RegisterEnumDescriptor(_PHASIFYNODE_INPUT_INDEX)

_PHASIFYNODE_OUTPUT_INDEX = _descriptor.EnumDescriptor(
  name='output_index',
  full_name='light.PhasifyNode.output_index',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PHASES_OUTPUT_INDEX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_SCALES_OUTPUT_INDEX', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_SCALES_OUTPUT_INDEX', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2867,
  serialized_end=2968,
)
_sym_db.RegisterEnumDescriptor(_PHASIFYNODE_OUTPUT_INDEX)

_CONSTNODE_CONSTTYPE = _descriptor.EnumDescriptor(
  name='ConstType',
  full_name='light.ConstNode.ConstType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GRAPH_CONST', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_SCALE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_SCALE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WEIGHTS', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEQUANT_BIAS', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3189,
  serialized_end=3282,
)
_sym_db.RegisterEnumDescriptor(_CONSTNODE_CONSTTYPE)


_ORIGINALNODE_ATTRENTRY = _descriptor.Descriptor(
  name='AttrEntry',
  full_name='light.OriginalNode.AttrEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='light.OriginalNode.AttrEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='light.OriginalNode.AttrEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=272,
  serialized_end=329,
)

_ORIGINALNODE = _descriptor.Descriptor(
  name='OriginalNode',
  full_name='light.OriginalNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='t', full_name='light.OriginalNode.t', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serialized_node', full_name='light.OriginalNode.serialized_node', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='op', full_name='light.OriginalNode.op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='attr', full_name='light.OriginalNode.attr', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ORIGINALNODE_ATTRENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=329,
)


_SUBGRAPHNODE = _descriptor.Descriptor(
  name='SubgraphNode',
  full_name='light.SubgraphNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='graph', full_name='light.SubgraphNode.graph', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=331,
  serialized_end=372,
)


_MATMULNODE = _descriptor.Descriptor(
  name='MatMulNode',
  full_name='light.MatMulNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='turn_off_adc', full_name='light.MatMulNode.turn_off_adc', index=0,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hist_keys_before_adc', full_name='light.MatMulNode.hist_keys_before_adc', index=1,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hist_keys_after_adc', full_name='light.MatMulNode.hist_keys_after_adc', index=2,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quant_precision', full_name='light.MatMulNode.quant_precision', index=3,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='using_quant_bias', full_name='light.MatMulNode.using_quant_bias', index=4,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phasify_is_folded', full_name='light.MatMulNode.phasify_is_folded', index=5,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dequant_method', full_name='light.MatMulNode.dequant_method', index=6,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='from_batch_matmul', full_name='light.MatMulNode.from_batch_matmul', index=7,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MATMULNODE_INDEX,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=794,
)


_LOOPMATMULNODE = _descriptor.Descriptor(
  name='LoopMatMulNode',
  full_name='light.LoopMatMulNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop', full_name='light.LoopMatMulNode.loop', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='matmul', full_name='light.LoopMatMulNode.matmul', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keep_trace', full_name='light.LoopMatMulNode.keep_trace', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='light.LoopMatMulNode.threshold', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=796,
  serialized_end=900,
)


_IMAGEPATCHATTRIBUTES = _descriptor.Descriptor(
  name='ImagePatchAttributes',
  full_name='light.ImagePatchAttributes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kernel_size', full_name='light.ImagePatchAttributes.kernel_size', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='strides', full_name='light.ImagePatchAttributes.strides', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='padding', full_name='light.ImagePatchAttributes.padding', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_format', full_name='light.ImagePatchAttributes.data_format', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _IMAGEPATCHATTRIBUTES_PADDING,
    _IMAGEPATCHATTRIBUTES_DATAFORMAT,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=903,
  serialized_end=1205,
)


_CONV2DNODE = _descriptor.Descriptor(
  name='Conv2DNode',
  full_name='light.Conv2DNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='matmul', full_name='light.Conv2DNode.matmul', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_attr', full_name='light.Conv2DNode.image_attr', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1207,
  serialized_end=1303,
)


_BLOCKDIAGONALDEPTHWISECONV2DNODE = _descriptor.Descriptor(
  name='BlockDiagonalDepthwiseConv2DNode',
  full_name='light.BlockDiagonalDepthwiseConv2DNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conv2d', full_name='light.BlockDiagonalDepthwiseConv2DNode.conv2d', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1305,
  serialized_end=1374,
)


_DISTRIBUTEDDEPTHWISECONV2DNODE = _descriptor.Descriptor(
  name='DistributedDepthwiseConv2DNode',
  full_name='light.DistributedDepthwiseConv2DNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conv2d', full_name='light.DistributedDepthwiseConv2DNode.conv2d', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1376,
  serialized_end=1443,
)


_POOLNODE = _descriptor.Descriptor(
  name='PoolNode',
  full_name='light.PoolNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_attr', full_name='light.PoolNode.image_attr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pooling_type', full_name='light.PoolNode.pooling_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quant_scale', full_name='light.PoolNode.quant_scale', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quant_precision', full_name='light.PoolNode.quant_precision', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _POOLNODE_POOLINGTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1446,
  serialized_end=1671,
)


_FUSEDBATCHNORMNODE = _descriptor.Descriptor(
  name='FusedBatchNormNode',
  full_name='light.FusedBatchNormNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='epsilon', full_name='light.FusedBatchNormNode.epsilon', index=0,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FUSEDBATCHNORMNODE_INDEX,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1674,
  serialized_end=1806,
)


_PADNODE = _descriptor.Descriptor(
  name='PadNode',
  full_name='light.PadNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='padding', full_name='light.PadNode.padding', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1808,
  serialized_end=1834,
)


_MEANNODE = _descriptor.Descriptor(
  name='MeanNode',
  full_name='light.MeanNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axes', full_name='light.MeanNode.axes', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keep_dims', full_name='light.MeanNode.keep_dims', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1836,
  serialized_end=1879,
)


_SVADDNODE = _descriptor.Descriptor(
  name='SVAddNode',
  full_name='light.SVAddNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='light.SVAddNode.scalar', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1881,
  serialized_end=1908,
)


_SVMULNODE = _descriptor.Descriptor(
  name='SVMulNode',
  full_name='light.SVMulNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='light.SVMulNode.scalar', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1910,
  serialized_end=1937,
)


_SVMAXNODE = _descriptor.Descriptor(
  name='SVMaxNode',
  full_name='light.SVMaxNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='light.SVMaxNode.scalar', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1939,
  serialized_end=1966,
)


_SVMINNODE = _descriptor.Descriptor(
  name='SVMinNode',
  full_name='light.SVMinNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='light.SVMinNode.scalar', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1968,
  serialized_end=1995,
)


_SVPOWNODE = _descriptor.Descriptor(
  name='SVPowNode',
  full_name='light.SVPowNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='light.SVPowNode.scalar', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1997,
  serialized_end=2024,
)


_VVADDNODE = _descriptor.Descriptor(
  name='VVAddNode',
  full_name='light.VVAddNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2026,
  serialized_end=2037,
)


_VVMULNODE = _descriptor.Descriptor(
  name='VVMulNode',
  full_name='light.VVMulNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2039,
  serialized_end=2050,
)


_VVDIVNODE = _descriptor.Descriptor(
  name='VVDivNode',
  full_name='light.VVDivNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2052,
  serialized_end=2063,
)


_VVMAXNODE = _descriptor.Descriptor(
  name='VVMaxNode',
  full_name='light.VVMaxNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2065,
  serialized_end=2076,
)


_VVMINNODE = _descriptor.Descriptor(
  name='VVMinNode',
  full_name='light.VVMinNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2078,
  serialized_end=2089,
)


_VVSUBNODE = _descriptor.Descriptor(
  name='VVSubNode',
  full_name='light.VVSubNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2091,
  serialized_end=2102,
)


_IDENTITYNODE = _descriptor.Descriptor(
  name='IdentityNode',
  full_name='light.IdentityNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2104,
  serialized_end=2118,
)


_RESHAPENODE = _descriptor.Descriptor(
  name='ReshapeNode',
  full_name='light.ReshapeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2120,
  serialized_end=2133,
)


_CASTNODE = _descriptor.Descriptor(
  name='CastNode',
  full_name='light.CastNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2135,
  serialized_end=2145,
)


_BLOCKDIAGONALDEPTHWISECONV2DRESHAPENODE = _descriptor.Descriptor(
  name='BlockDiagonalDepthwiseConv2DReshapeNode',
  full_name='light.BlockDiagonalDepthwiseConv2DReshapeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2147,
  serialized_end=2188,
)


_TRANSPOSENODE = _descriptor.Descriptor(
  name='TransposeNode',
  full_name='light.TransposeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axes', full_name='light.TransposeNode.axes', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2190,
  serialized_end=2219,
)


_UNSTACKNODE = _descriptor.Descriptor(
  name='UnstackNode',
  full_name='light.UnstackNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axis', full_name='light.UnstackNode.axis', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2221,
  serialized_end=2248,
)


_STACKNODE = _descriptor.Descriptor(
  name='StackNode',
  full_name='light.StackNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axis', full_name='light.StackNode.axis', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2250,
  serialized_end=2275,
)


_CONCATNODE = _descriptor.Descriptor(
  name='ConcatNode',
  full_name='light.ConcatNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axis', full_name='light.ConcatNode.axis', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2277,
  serialized_end=2303,
)


_SPLITNODE = _descriptor.Descriptor(
  name='SplitNode',
  full_name='light.SplitNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axis', full_name='light.SplitNode.axis', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2305,
  serialized_end=2330,
)


_REDUCESUMNODE = _descriptor.Descriptor(
  name='ReduceSumNode',
  full_name='light.ReduceSumNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='axes', full_name='light.ReduceSumNode.axes', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keep_dims', full_name='light.ReduceSumNode.keep_dims', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2332,
  serialized_end=2380,
)


_EXPNODE = _descriptor.Descriptor(
  name='ExpNode',
  full_name='light.ExpNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2382,
  serialized_end=2391,
)


_COLLECTHISTNODE = _descriptor.Descriptor(
  name='CollectHistNode',
  full_name='light.CollectHistNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hist_keys', full_name='light.CollectHistNode.hist_keys', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2393,
  serialized_end=2446,
)


_QUANTIZENODE = _descriptor.Descriptor(
  name='QuantizeNode',
  full_name='light.QuantizeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale', full_name='light.QuantizeNode.scale', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='precision', full_name='light.QuantizeNode.precision', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias', full_name='light.QuantizeNode.bias', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2448,
  serialized_end=2510,
)


_DEQUANTIZENODE = _descriptor.Descriptor(
  name='DequantizeNode',
  full_name='light.DequantizeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='method', full_name='light.DequantizeNode.method', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias', full_name='light.DequantizeNode.bias', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DEQUANTIZENODE_INDEX,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2512,
  serialized_end=2632,
)


_REQUANTIZENODE = _descriptor.Descriptor(
  name='RequantizeNode',
  full_name='light.RequantizeNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dequantize', full_name='light.RequantizeNode.dequantize', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quantize', full_name='light.RequantizeNode.quantize', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2634,
  serialized_end=2732,
)


_PHASIFYNODE = _descriptor.Descriptor(
  name='PhasifyNode',
  full_name='light.PhasifyNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transpose', full_name='light.PhasifyNode.transpose', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PHASIFYNODE_INPUT_INDEX,
    _PHASIFYNODE_OUTPUT_INDEX,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2735,
  serialized_end=2968,
)


_CONSTNODE = _descriptor.Descriptor(
  name='ConstNode',
  full_name='light.ConstNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='light.ConstNode.value', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='const_type', full_name='light.ConstNode.const_type', index=1,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='weight_rows', full_name='light.ConstNode.weight_rows', index=2,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='non_sparse_weight_rows', full_name='light.ConstNode.non_sparse_weight_rows', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sparse_rows_per_tile', full_name='light.ConstNode.sparse_rows_per_tile', index=4,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sparsity_type', full_name='light.ConstNode.sparsity_type', index=5,
      number=7, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONSTNODE_CONSTTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2971,
  serialized_end=3282,
)


_VARIABLENODE = _descriptor.Descriptor(
  name='VariableNode',
  full_name='light.VariableNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3284,
  serialized_end=3298,
)


_LOADWEIGHTSNODE = _descriptor.Descriptor(
  name='LoadWeightsNode',
  full_name='light.LoadWeightsNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sparse_rows_per_tile', full_name='light.LoadWeightsNode.sparse_rows_per_tile', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sparsity_type', full_name='light.LoadWeightsNode.sparsity_type', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scale_type', full_name='light.LoadWeightsNode.scale_type', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scales_appended_to_weights', full_name='light.LoadWeightsNode.scales_appended_to_weights', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='using_quant_bias', full_name='light.LoadWeightsNode.using_quant_bias', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3301,
  serialized_end=3488,
)


_APPLYWEIGHTSNODE = _descriptor.Descriptor(
  name='ApplyWeightsNode',
  full_name='light.ApplyWeightsNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quant_params', full_name='light.ApplyWeightsNode.quant_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3490,
  serialized_end=3545,
)


_MOVENODE = _descriptor.Descriptor(
  name='MoveNode',
  full_name='light.MoveNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3547,
  serialized_end=3557,
)


_HALTNODE = _descriptor.Descriptor(
  name='HaltNode',
  full_name='light.HaltNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exit_code', full_name='light.HaltNode.exit_code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inp_ten', full_name='light.HaltNode.inp_ten', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='out_ten', full_name='light.HaltNode.out_ten', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3559,
  serialized_end=3622,
)


_NOOPNODE = _descriptor.Descriptor(
  name='NoOpNode',
  full_name='light.NoOpNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3624,
  serialized_end=3634,
)


_BUNDLENODE = _descriptor.Descriptor(
  name='BundleNode',
  full_name='light.BundleNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subgraph', full_name='light.BundleNode.subgraph', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3636,
  serialized_end=3678,
)


_UPDATEVARIABLESNODE_UPDATEQUANTPARAMS = _descriptor.Descriptor(
  name='UpdateQuantParams',
  full_name='light.UpdateVariablesNode.UpdateQuantParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='light.UpdateVariablesNode.UpdateQuantParams.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3764,
  serialized_end=3796,
)

_UPDATEVARIABLESNODE_UPDATEADCSCALES = _descriptor.Descriptor(
  name='UpdateADCScales',
  full_name='light.UpdateVariablesNode.UpdateADCScales',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keys', full_name='light.UpdateVariablesNode.UpdateADCScales.keys', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3798,
  serialized_end=3829,
)

_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE = _descriptor.Descriptor(
  name='UpdateType',
  full_name='light.UpdateVariablesNode.UpdateInfo.UpdateType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='update_quant_params', full_name='light.UpdateVariablesNode.UpdateInfo.UpdateType.update_quant_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update_adc_scales', full_name='light.UpdateVariablesNode.UpdateInfo.UpdateType.update_adc_scales', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='light.UpdateVariablesNode.UpdateInfo.UpdateType.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3925,
  serialized_end=4095,
)

_UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY = _descriptor.Descriptor(
  name='VariableMapEntry',
  full_name='light.UpdateVariablesNode.UpdateInfo.VariableMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='light.UpdateVariablesNode.UpdateInfo.VariableMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='light.UpdateVariablesNode.UpdateInfo.VariableMapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4097,
  serialized_end=4197,
)

_UPDATEVARIABLESNODE_UPDATEINFO = _descriptor.Descriptor(
  name='UpdateInfo',
  full_name='light.UpdateVariablesNode.UpdateInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variable_map', full_name='light.UpdateVariablesNode.UpdateInfo.variable_map', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE, _UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3832,
  serialized_end=4197,
)

_UPDATEVARIABLESNODE = _descriptor.Descriptor(
  name='UpdateVariablesNode',
  full_name='light.UpdateVariablesNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='update_info', full_name='light.UpdateVariablesNode.update_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_UPDATEVARIABLESNODE_UPDATEQUANTPARAMS, _UPDATEVARIABLESNODE_UPDATEADCSCALES, _UPDATEVARIABLESNODE_UPDATEINFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3681,
  serialized_end=4197,
)


_FILLNODE = _descriptor.Descriptor(
  name='FillNode',
  full_name='light.FillNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='light.FillNode.value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4199,
  serialized_end=4224,
)


_TILENODE = _descriptor.Descriptor(
  name='TileNode',
  full_name='light.TileNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4226,
  serialized_end=4236,
)


_QUANTIZATIONPARAMETERS = _descriptor.Descriptor(
  name='QuantizationParameters',
  full_name='light.QuantizationParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quantized_dimension', full_name='light.QuantizationParameters.quantized_dimension', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scale', full_name='light.QuantizationParameters.scale', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias', full_name='light.QuantizationParameters.bias', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4238,
  serialized_end=4320,
)


_EDGEINFO = _descriptor.Descriptor(
  name='EdgeInfo',
  full_name='light.EdgeInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='light.EdgeInfo.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='light.EdgeInfo.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='light.EdgeInfo.dtype', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='light.EdgeInfo.shape', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quant_params', full_name='light.EdgeInfo.quant_params', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4323,
  serialized_end=4478,
)


_LNF = _descriptor.Descriptor(
  name='LNF',
  full_name='light.LNF',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='light.LNF.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='light.LNF.inputs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='control_inputs', full_name='light.LNF.control_inputs', index=2,
      number=37, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outputs', full_name='light.LNF.outputs', index=3,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='supported', full_name='light.LNF.supported', index=4,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='original', full_name='light.LNF.original', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subgraph', full_name='light.LNF.subgraph', index=6,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='matmul', full_name='light.LNF.matmul', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conv2d', full_name='light.LNF.conv2d', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='loop_matmul', full_name='light.LNF.loop_matmul', index=9,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='block_diagonal_depthwise_conv2d', full_name='light.LNF.block_diagonal_depthwise_conv2d', index=10,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distributed_depthwise_conv2d', full_name='light.LNF.distributed_depthwise_conv2d', index=11,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pool', full_name='light.LNF.pool', index=12,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='batchnorm', full_name='light.LNF.batchnorm', index=13,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pad', full_name='light.LNF.pad', index=14,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mean', full_name='light.LNF.mean', index=15,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sv_add', full_name='light.LNF.sv_add', index=16,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sv_mul', full_name='light.LNF.sv_mul', index=17,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sv_max', full_name='light.LNF.sv_max', index=18,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sv_min', full_name='light.LNF.sv_min', index=19,
      number=34, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sv_pow', full_name='light.LNF.sv_pow', index=20,
      number=53, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_add', full_name='light.LNF.vv_add', index=21,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_mul', full_name='light.LNF.vv_mul', index=22,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_div', full_name='light.LNF.vv_div', index=23,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_max', full_name='light.LNF.vv_max', index=24,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_min', full_name='light.LNF.vv_min', index=25,
      number=35, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vv_sub', full_name='light.LNF.vv_sub', index=26,
      number=52, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='identity', full_name='light.LNF.identity', index=27,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reshape', full_name='light.LNF.reshape', index=28,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cast', full_name='light.LNF.cast', index=29,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='block_diagonal_depthwise_conv2d_reshape', full_name='light.LNF.block_diagonal_depthwise_conv2d_reshape', index=30,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transpose', full_name='light.LNF.transpose', index=31,
      number=46, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reduce_sum', full_name='light.LNF.reduce_sum', index=32,
      number=48, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exp', full_name='light.LNF.exp', index=33,
      number=49, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unstack', full_name='light.LNF.unstack', index=34,
      number=51, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fill', full_name='light.LNF.fill', index=35,
      number=54, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stack', full_name='light.LNF.stack', index=36,
      number=55, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tile', full_name='light.LNF.tile', index=37,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='concat', full_name='light.LNF.concat', index=38,
      number=57, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='split', full_name='light.LNF.split', index=39,
      number=58, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='collect_hist', full_name='light.LNF.collect_hist', index=40,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quantize', full_name='light.LNF.quantize', index=41,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dequantize', full_name='light.LNF.dequantize', index=42,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requantize', full_name='light.LNF.requantize', index=43,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phasify', full_name='light.LNF.phasify', index=44,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='const', full_name='light.LNF.const', index=45,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='variable', full_name='light.LNF.variable', index=46,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ldw', full_name='light.LNF.ldw', index=47,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apw', full_name='light.LNF.apw', index=48,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='move', full_name='light.LNF.move', index=49,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='halt', full_name='light.LNF.halt', index=50,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='noop', full_name='light.LNF.noop', index=51,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bundle', full_name='light.LNF.bundle', index=52,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update_variables', full_name='light.LNF.update_variables', index=53,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='node', full_name='light.LNF.node',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4481,
  serialized_end=6631,
)


_METAGRAPHINFO_ORIGINALGRAPHINFOENTRY = _descriptor.Descriptor(
  name='OriginalGraphInfoEntry',
  full_name='light.MetaGraphInfo.OriginalGraphInfoEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='light.MetaGraphInfo.OriginalGraphInfoEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='light.MetaGraphInfo.OriginalGraphInfoEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6749,
  serialized_end=6819,
)

_METAGRAPHINFO = _descriptor.Descriptor(
  name='MetaGraphInfo',
  full_name='light.MetaGraphInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_graph_info', full_name='light.MetaGraphInfo.original_graph_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='required_nodes', full_name='light.MetaGraphInfo.required_nodes', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_METAGRAPHINFO_ORIGINALGRAPHINFOENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6634,
  serialized_end=6819,
)


_LGF = _descriptor.Descriptor(
  name='LGF',
  full_name='light.LGF',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='light.LGF.nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_edges', full_name='light.LGF.input_edges', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_edges', full_name='light.LGF.output_edges', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_node_names', full_name='light.LGF.output_node_names', index=3,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta_graph_info', full_name='light.LGF.meta_graph_info', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6822,
  serialized_end=7005,
)

_ORIGINALNODE_ATTRENTRY.fields_by_name['value'].message_type = sdk2_dot_proto_dot_common__pb2._PARAM
_ORIGINALNODE_ATTRENTRY.containing_type = _ORIGINALNODE
_ORIGINALNODE.fields_by_name['t'].enum_type = sdk2_dot_proto_dot_graph__types__pb2._GRAPHTYPE
_ORIGINALNODE.fields_by_name['op'].enum_type = sdk2_dot_proto_dot_ops__pb2._OP
_ORIGINALNODE.fields_by_name['attr'].message_type = _ORIGINALNODE_ATTRENTRY
_SUBGRAPHNODE.fields_by_name['graph'].message_type = _LGF
_MATMULNODE.fields_by_name['hist_keys_before_adc'].message_type = sdk2_dot_proto_dot_common__pb2._HISTKEYS
_MATMULNODE.fields_by_name['hist_keys_after_adc'].message_type = sdk2_dot_proto_dot_common__pb2._HISTKEYS
_MATMULNODE.fields_by_name['dequant_method'].enum_type = _DEQUANTMETHOD
_MATMULNODE_INDEX.containing_type = _MATMULNODE
_LOOPMATMULNODE.fields_by_name['matmul'].message_type = _MATMULNODE
_IMAGEPATCHATTRIBUTES.fields_by_name['padding'].enum_type = _IMAGEPATCHATTRIBUTES_PADDING
_IMAGEPATCHATTRIBUTES.fields_by_name['data_format'].enum_type = _IMAGEPATCHATTRIBUTES_DATAFORMAT
_IMAGEPATCHATTRIBUTES_PADDING.containing_type = _IMAGEPATCHATTRIBUTES
_IMAGEPATCHATTRIBUTES_DATAFORMAT.containing_type = _IMAGEPATCHATTRIBUTES
_CONV2DNODE.fields_by_name['matmul'].message_type = _MATMULNODE
_CONV2DNODE.fields_by_name['image_attr'].message_type = _IMAGEPATCHATTRIBUTES
_BLOCKDIAGONALDEPTHWISECONV2DNODE.fields_by_name['conv2d'].message_type = _CONV2DNODE
_DISTRIBUTEDDEPTHWISECONV2DNODE.fields_by_name['conv2d'].message_type = _CONV2DNODE
_POOLNODE.fields_by_name['image_attr'].message_type = _IMAGEPATCHATTRIBUTES
_POOLNODE.fields_by_name['pooling_type'].enum_type = _POOLNODE_POOLINGTYPE
_POOLNODE_POOLINGTYPE.containing_type = _POOLNODE
_FUSEDBATCHNORMNODE_INDEX.containing_type = _FUSEDBATCHNORMNODE
_COLLECTHISTNODE.fields_by_name['hist_keys'].message_type = sdk2_dot_proto_dot_common__pb2._HISTKEYS
_DEQUANTIZENODE.fields_by_name['method'].enum_type = _DEQUANTMETHOD
_DEQUANTIZENODE_INDEX.containing_type = _DEQUANTIZENODE
_REQUANTIZENODE.fields_by_name['dequantize'].message_type = _DEQUANTIZENODE
_REQUANTIZENODE.fields_by_name['quantize'].message_type = _QUANTIZENODE
_PHASIFYNODE_INPUT_INDEX.containing_type = _PHASIFYNODE
_PHASIFYNODE_OUTPUT_INDEX.containing_type = _PHASIFYNODE
_CONSTNODE.fields_by_name['value'].message_type = sdk2_dot_proto_dot_common__pb2._TENSOR
_CONSTNODE.fields_by_name['const_type'].enum_type = _CONSTNODE_CONSTTYPE
_CONSTNODE.fields_by_name['sparsity_type'].enum_type = _SPARSITYTYPE
_CONSTNODE_CONSTTYPE.containing_type = _CONSTNODE
_LOADWEIGHTSNODE.fields_by_name['sparsity_type'].enum_type = _SPARSITYTYPE
_LOADWEIGHTSNODE.fields_by_name['scale_type'].message_type = sdk2_dot_proto_dot_dtypes__pb2._DTYPE
_APPLYWEIGHTSNODE.fields_by_name['quant_params'].message_type = sdk2_dot_proto_dot_common__pb2._TENSOR
_BUNDLENODE.fields_by_name['subgraph'].message_type = _LGF
_UPDATEVARIABLESNODE_UPDATEQUANTPARAMS.containing_type = _UPDATEVARIABLESNODE
_UPDATEVARIABLESNODE_UPDATEADCSCALES.containing_type = _UPDATEVARIABLESNODE
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_quant_params'].message_type = _UPDATEVARIABLESNODE_UPDATEQUANTPARAMS
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_adc_scales'].message_type = _UPDATEVARIABLESNODE_UPDATEADCSCALES
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.containing_type = _UPDATEVARIABLESNODE_UPDATEINFO
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.oneofs_by_name['type'].fields.append(
  _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_quant_params'])
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_quant_params'].containing_oneof = _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.oneofs_by_name['type']
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.oneofs_by_name['type'].fields.append(
  _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_adc_scales'])
_UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.fields_by_name['update_adc_scales'].containing_oneof = _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE.oneofs_by_name['type']
_UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY.fields_by_name['value'].message_type = _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE
_UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY.containing_type = _UPDATEVARIABLESNODE_UPDATEINFO
_UPDATEVARIABLESNODE_UPDATEINFO.fields_by_name['variable_map'].message_type = _UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY
_UPDATEVARIABLESNODE_UPDATEINFO.containing_type = _UPDATEVARIABLESNODE
_UPDATEVARIABLESNODE.fields_by_name['update_info'].message_type = _UPDATEVARIABLESNODE_UPDATEINFO
_EDGEINFO.fields_by_name['dtype'].message_type = sdk2_dot_proto_dot_dtypes__pb2._DTYPE
_EDGEINFO.fields_by_name['shape'].message_type = sdk2_dot_proto_dot_common__pb2._TENSORSHAPE
_EDGEINFO.fields_by_name['quant_params'].message_type = _QUANTIZATIONPARAMETERS
_LNF.fields_by_name['inputs'].message_type = _EDGEINFO
_LNF.fields_by_name['outputs'].message_type = _EDGEINFO
_LNF.fields_by_name['original'].message_type = _ORIGINALNODE
_LNF.fields_by_name['subgraph'].message_type = _SUBGRAPHNODE
_LNF.fields_by_name['matmul'].message_type = _MATMULNODE
_LNF.fields_by_name['conv2d'].message_type = _CONV2DNODE
_LNF.fields_by_name['loop_matmul'].message_type = _LOOPMATMULNODE
_LNF.fields_by_name['block_diagonal_depthwise_conv2d'].message_type = _BLOCKDIAGONALDEPTHWISECONV2DNODE
_LNF.fields_by_name['distributed_depthwise_conv2d'].message_type = _DISTRIBUTEDDEPTHWISECONV2DNODE
_LNF.fields_by_name['pool'].message_type = _POOLNODE
_LNF.fields_by_name['batchnorm'].message_type = _FUSEDBATCHNORMNODE
_LNF.fields_by_name['pad'].message_type = _PADNODE
_LNF.fields_by_name['mean'].message_type = _MEANNODE
_LNF.fields_by_name['sv_add'].message_type = _SVADDNODE
_LNF.fields_by_name['sv_mul'].message_type = _SVMULNODE
_LNF.fields_by_name['sv_max'].message_type = _SVMAXNODE
_LNF.fields_by_name['sv_min'].message_type = _SVMINNODE
_LNF.fields_by_name['sv_pow'].message_type = _SVPOWNODE
_LNF.fields_by_name['vv_add'].message_type = _VVADDNODE
_LNF.fields_by_name['vv_mul'].message_type = _VVMULNODE
_LNF.fields_by_name['vv_div'].message_type = _VVDIVNODE
_LNF.fields_by_name['vv_max'].message_type = _VVMAXNODE
_LNF.fields_by_name['vv_min'].message_type = _VVMINNODE
_LNF.fields_by_name['vv_sub'].message_type = _VVSUBNODE
_LNF.fields_by_name['identity'].message_type = _IDENTITYNODE
_LNF.fields_by_name['reshape'].message_type = _RESHAPENODE
_LNF.fields_by_name['cast'].message_type = _CASTNODE
_LNF.fields_by_name['block_diagonal_depthwise_conv2d_reshape'].message_type = _BLOCKDIAGONALDEPTHWISECONV2DRESHAPENODE
_LNF.fields_by_name['transpose'].message_type = _TRANSPOSENODE
_LNF.fields_by_name['reduce_sum'].message_type = _REDUCESUMNODE
_LNF.fields_by_name['exp'].message_type = _EXPNODE
_LNF.fields_by_name['unstack'].message_type = _UNSTACKNODE
_LNF.fields_by_name['fill'].message_type = _FILLNODE
_LNF.fields_by_name['stack'].message_type = _STACKNODE
_LNF.fields_by_name['tile'].message_type = _TILENODE
_LNF.fields_by_name['concat'].message_type = _CONCATNODE
_LNF.fields_by_name['split'].message_type = _SPLITNODE
_LNF.fields_by_name['collect_hist'].message_type = _COLLECTHISTNODE
_LNF.fields_by_name['quantize'].message_type = _QUANTIZENODE
_LNF.fields_by_name['dequantize'].message_type = _DEQUANTIZENODE
_LNF.fields_by_name['requantize'].message_type = _REQUANTIZENODE
_LNF.fields_by_name['phasify'].message_type = _PHASIFYNODE
_LNF.fields_by_name['const'].message_type = _CONSTNODE
_LNF.fields_by_name['variable'].message_type = _VARIABLENODE
_LNF.fields_by_name['ldw'].message_type = _LOADWEIGHTSNODE
_LNF.fields_by_name['apw'].message_type = _APPLYWEIGHTSNODE
_LNF.fields_by_name['move'].message_type = _MOVENODE
_LNF.fields_by_name['halt'].message_type = _HALTNODE
_LNF.fields_by_name['noop'].message_type = _NOOPNODE
_LNF.fields_by_name['bundle'].message_type = _BUNDLENODE
_LNF.fields_by_name['update_variables'].message_type = _UPDATEVARIABLESNODE
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['original'])
_LNF.fields_by_name['original'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['subgraph'])
_LNF.fields_by_name['subgraph'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['matmul'])
_LNF.fields_by_name['matmul'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['conv2d'])
_LNF.fields_by_name['conv2d'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['loop_matmul'])
_LNF.fields_by_name['loop_matmul'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['block_diagonal_depthwise_conv2d'])
_LNF.fields_by_name['block_diagonal_depthwise_conv2d'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['distributed_depthwise_conv2d'])
_LNF.fields_by_name['distributed_depthwise_conv2d'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['pool'])
_LNF.fields_by_name['pool'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['batchnorm'])
_LNF.fields_by_name['batchnorm'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['pad'])
_LNF.fields_by_name['pad'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['mean'])
_LNF.fields_by_name['mean'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['sv_add'])
_LNF.fields_by_name['sv_add'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['sv_mul'])
_LNF.fields_by_name['sv_mul'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['sv_max'])
_LNF.fields_by_name['sv_max'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['sv_min'])
_LNF.fields_by_name['sv_min'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['sv_pow'])
_LNF.fields_by_name['sv_pow'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_add'])
_LNF.fields_by_name['vv_add'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_mul'])
_LNF.fields_by_name['vv_mul'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_div'])
_LNF.fields_by_name['vv_div'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_max'])
_LNF.fields_by_name['vv_max'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_min'])
_LNF.fields_by_name['vv_min'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['vv_sub'])
_LNF.fields_by_name['vv_sub'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['identity'])
_LNF.fields_by_name['identity'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['reshape'])
_LNF.fields_by_name['reshape'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['cast'])
_LNF.fields_by_name['cast'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['block_diagonal_depthwise_conv2d_reshape'])
_LNF.fields_by_name['block_diagonal_depthwise_conv2d_reshape'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['transpose'])
_LNF.fields_by_name['transpose'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['reduce_sum'])
_LNF.fields_by_name['reduce_sum'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['exp'])
_LNF.fields_by_name['exp'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['unstack'])
_LNF.fields_by_name['unstack'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['fill'])
_LNF.fields_by_name['fill'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['stack'])
_LNF.fields_by_name['stack'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['tile'])
_LNF.fields_by_name['tile'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['concat'])
_LNF.fields_by_name['concat'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['split'])
_LNF.fields_by_name['split'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['collect_hist'])
_LNF.fields_by_name['collect_hist'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['quantize'])
_LNF.fields_by_name['quantize'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['dequantize'])
_LNF.fields_by_name['dequantize'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['requantize'])
_LNF.fields_by_name['requantize'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['phasify'])
_LNF.fields_by_name['phasify'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['const'])
_LNF.fields_by_name['const'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['variable'])
_LNF.fields_by_name['variable'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['ldw'])
_LNF.fields_by_name['ldw'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['apw'])
_LNF.fields_by_name['apw'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['move'])
_LNF.fields_by_name['move'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['halt'])
_LNF.fields_by_name['halt'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['noop'])
_LNF.fields_by_name['noop'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['bundle'])
_LNF.fields_by_name['bundle'].containing_oneof = _LNF.oneofs_by_name['node']
_LNF.oneofs_by_name['node'].fields.append(
  _LNF.fields_by_name['update_variables'])
_LNF.fields_by_name['update_variables'].containing_oneof = _LNF.oneofs_by_name['node']
_METAGRAPHINFO_ORIGINALGRAPHINFOENTRY.fields_by_name['value'].message_type = sdk2_dot_proto_dot_common__pb2._PARAM
_METAGRAPHINFO_ORIGINALGRAPHINFOENTRY.containing_type = _METAGRAPHINFO
_METAGRAPHINFO.fields_by_name['original_graph_info'].message_type = _METAGRAPHINFO_ORIGINALGRAPHINFOENTRY
_LGF.fields_by_name['nodes'].message_type = _LNF
_LGF.fields_by_name['input_edges'].message_type = _EDGEINFO
_LGF.fields_by_name['output_edges'].message_type = _EDGEINFO
_LGF.fields_by_name['meta_graph_info'].message_type = _METAGRAPHINFO
DESCRIPTOR.message_types_by_name['OriginalNode'] = _ORIGINALNODE
DESCRIPTOR.message_types_by_name['SubgraphNode'] = _SUBGRAPHNODE
DESCRIPTOR.message_types_by_name['MatMulNode'] = _MATMULNODE
DESCRIPTOR.message_types_by_name['LoopMatMulNode'] = _LOOPMATMULNODE
DESCRIPTOR.message_types_by_name['ImagePatchAttributes'] = _IMAGEPATCHATTRIBUTES
DESCRIPTOR.message_types_by_name['Conv2DNode'] = _CONV2DNODE
DESCRIPTOR.message_types_by_name['BlockDiagonalDepthwiseConv2DNode'] = _BLOCKDIAGONALDEPTHWISECONV2DNODE
DESCRIPTOR.message_types_by_name['DistributedDepthwiseConv2DNode'] = _DISTRIBUTEDDEPTHWISECONV2DNODE
DESCRIPTOR.message_types_by_name['PoolNode'] = _POOLNODE
DESCRIPTOR.message_types_by_name['FusedBatchNormNode'] = _FUSEDBATCHNORMNODE
DESCRIPTOR.message_types_by_name['PadNode'] = _PADNODE
DESCRIPTOR.message_types_by_name['MeanNode'] = _MEANNODE
DESCRIPTOR.message_types_by_name['SVAddNode'] = _SVADDNODE
DESCRIPTOR.message_types_by_name['SVMulNode'] = _SVMULNODE
DESCRIPTOR.message_types_by_name['SVMaxNode'] = _SVMAXNODE
DESCRIPTOR.message_types_by_name['SVMinNode'] = _SVMINNODE
DESCRIPTOR.message_types_by_name['SVPowNode'] = _SVPOWNODE
DESCRIPTOR.message_types_by_name['VVAddNode'] = _VVADDNODE
DESCRIPTOR.message_types_by_name['VVMulNode'] = _VVMULNODE
DESCRIPTOR.message_types_by_name['VVDivNode'] = _VVDIVNODE
DESCRIPTOR.message_types_by_name['VVMaxNode'] = _VVMAXNODE
DESCRIPTOR.message_types_by_name['VVMinNode'] = _VVMINNODE
DESCRIPTOR.message_types_by_name['VVSubNode'] = _VVSUBNODE
DESCRIPTOR.message_types_by_name['IdentityNode'] = _IDENTITYNODE
DESCRIPTOR.message_types_by_name['ReshapeNode'] = _RESHAPENODE
DESCRIPTOR.message_types_by_name['CastNode'] = _CASTNODE
DESCRIPTOR.message_types_by_name['BlockDiagonalDepthwiseConv2DReshapeNode'] = _BLOCKDIAGONALDEPTHWISECONV2DRESHAPENODE
DESCRIPTOR.message_types_by_name['TransposeNode'] = _TRANSPOSENODE
DESCRIPTOR.message_types_by_name['UnstackNode'] = _UNSTACKNODE
DESCRIPTOR.message_types_by_name['StackNode'] = _STACKNODE
DESCRIPTOR.message_types_by_name['ConcatNode'] = _CONCATNODE
DESCRIPTOR.message_types_by_name['SplitNode'] = _SPLITNODE
DESCRIPTOR.message_types_by_name['ReduceSumNode'] = _REDUCESUMNODE
DESCRIPTOR.message_types_by_name['ExpNode'] = _EXPNODE
DESCRIPTOR.message_types_by_name['CollectHistNode'] = _COLLECTHISTNODE
DESCRIPTOR.message_types_by_name['QuantizeNode'] = _QUANTIZENODE
DESCRIPTOR.message_types_by_name['DequantizeNode'] = _DEQUANTIZENODE
DESCRIPTOR.message_types_by_name['RequantizeNode'] = _REQUANTIZENODE
DESCRIPTOR.message_types_by_name['PhasifyNode'] = _PHASIFYNODE
DESCRIPTOR.message_types_by_name['ConstNode'] = _CONSTNODE
DESCRIPTOR.message_types_by_name['VariableNode'] = _VARIABLENODE
DESCRIPTOR.message_types_by_name['LoadWeightsNode'] = _LOADWEIGHTSNODE
DESCRIPTOR.message_types_by_name['ApplyWeightsNode'] = _APPLYWEIGHTSNODE
DESCRIPTOR.message_types_by_name['MoveNode'] = _MOVENODE
DESCRIPTOR.message_types_by_name['HaltNode'] = _HALTNODE
DESCRIPTOR.message_types_by_name['NoOpNode'] = _NOOPNODE
DESCRIPTOR.message_types_by_name['BundleNode'] = _BUNDLENODE
DESCRIPTOR.message_types_by_name['UpdateVariablesNode'] = _UPDATEVARIABLESNODE
DESCRIPTOR.message_types_by_name['FillNode'] = _FILLNODE
DESCRIPTOR.message_types_by_name['TileNode'] = _TILENODE
DESCRIPTOR.message_types_by_name['QuantizationParameters'] = _QUANTIZATIONPARAMETERS
DESCRIPTOR.message_types_by_name['EdgeInfo'] = _EDGEINFO
DESCRIPTOR.message_types_by_name['LNF'] = _LNF
DESCRIPTOR.message_types_by_name['MetaGraphInfo'] = _METAGRAPHINFO
DESCRIPTOR.message_types_by_name['LGF'] = _LGF
DESCRIPTOR.enum_types_by_name['DequantMethod'] = _DEQUANTMETHOD
DESCRIPTOR.enum_types_by_name['SparsityType'] = _SPARSITYTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OriginalNode = _reflection.GeneratedProtocolMessageType('OriginalNode', (_message.Message,), {

  'AttrEntry' : _reflection.GeneratedProtocolMessageType('AttrEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORIGINALNODE_ATTRENTRY,
    '__module__' : 'sdk2.proto.lgf_pb2'
    # @@protoc_insertion_point(class_scope:light.OriginalNode.AttrEntry)
    })
  ,
  'DESCRIPTOR' : _ORIGINALNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.OriginalNode)
  })
_sym_db.RegisterMessage(OriginalNode)
_sym_db.RegisterMessage(OriginalNode.AttrEntry)

SubgraphNode = _reflection.GeneratedProtocolMessageType('SubgraphNode', (_message.Message,), {
  'DESCRIPTOR' : _SUBGRAPHNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SubgraphNode)
  })
_sym_db.RegisterMessage(SubgraphNode)

MatMulNode = _reflection.GeneratedProtocolMessageType('MatMulNode', (_message.Message,), {
  'DESCRIPTOR' : _MATMULNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.MatMulNode)
  })
_sym_db.RegisterMessage(MatMulNode)

LoopMatMulNode = _reflection.GeneratedProtocolMessageType('LoopMatMulNode', (_message.Message,), {
  'DESCRIPTOR' : _LOOPMATMULNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.LoopMatMulNode)
  })
_sym_db.RegisterMessage(LoopMatMulNode)

ImagePatchAttributes = _reflection.GeneratedProtocolMessageType('ImagePatchAttributes', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEPATCHATTRIBUTES,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ImagePatchAttributes)
  })
_sym_db.RegisterMessage(ImagePatchAttributes)

Conv2DNode = _reflection.GeneratedProtocolMessageType('Conv2DNode', (_message.Message,), {
  'DESCRIPTOR' : _CONV2DNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.Conv2DNode)
  })
_sym_db.RegisterMessage(Conv2DNode)

BlockDiagonalDepthwiseConv2DNode = _reflection.GeneratedProtocolMessageType('BlockDiagonalDepthwiseConv2DNode', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKDIAGONALDEPTHWISECONV2DNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.BlockDiagonalDepthwiseConv2DNode)
  })
_sym_db.RegisterMessage(BlockDiagonalDepthwiseConv2DNode)

DistributedDepthwiseConv2DNode = _reflection.GeneratedProtocolMessageType('DistributedDepthwiseConv2DNode', (_message.Message,), {
  'DESCRIPTOR' : _DISTRIBUTEDDEPTHWISECONV2DNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.DistributedDepthwiseConv2DNode)
  })
_sym_db.RegisterMessage(DistributedDepthwiseConv2DNode)

PoolNode = _reflection.GeneratedProtocolMessageType('PoolNode', (_message.Message,), {
  'DESCRIPTOR' : _POOLNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.PoolNode)
  })
_sym_db.RegisterMessage(PoolNode)

FusedBatchNormNode = _reflection.GeneratedProtocolMessageType('FusedBatchNormNode', (_message.Message,), {
  'DESCRIPTOR' : _FUSEDBATCHNORMNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.FusedBatchNormNode)
  })
_sym_db.RegisterMessage(FusedBatchNormNode)

PadNode = _reflection.GeneratedProtocolMessageType('PadNode', (_message.Message,), {
  'DESCRIPTOR' : _PADNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.PadNode)
  })
_sym_db.RegisterMessage(PadNode)

MeanNode = _reflection.GeneratedProtocolMessageType('MeanNode', (_message.Message,), {
  'DESCRIPTOR' : _MEANNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.MeanNode)
  })
_sym_db.RegisterMessage(MeanNode)

SVAddNode = _reflection.GeneratedProtocolMessageType('SVAddNode', (_message.Message,), {
  'DESCRIPTOR' : _SVADDNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SVAddNode)
  })
_sym_db.RegisterMessage(SVAddNode)

SVMulNode = _reflection.GeneratedProtocolMessageType('SVMulNode', (_message.Message,), {
  'DESCRIPTOR' : _SVMULNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SVMulNode)
  })
_sym_db.RegisterMessage(SVMulNode)

SVMaxNode = _reflection.GeneratedProtocolMessageType('SVMaxNode', (_message.Message,), {
  'DESCRIPTOR' : _SVMAXNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SVMaxNode)
  })
_sym_db.RegisterMessage(SVMaxNode)

SVMinNode = _reflection.GeneratedProtocolMessageType('SVMinNode', (_message.Message,), {
  'DESCRIPTOR' : _SVMINNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SVMinNode)
  })
_sym_db.RegisterMessage(SVMinNode)

SVPowNode = _reflection.GeneratedProtocolMessageType('SVPowNode', (_message.Message,), {
  'DESCRIPTOR' : _SVPOWNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SVPowNode)
  })
_sym_db.RegisterMessage(SVPowNode)

VVAddNode = _reflection.GeneratedProtocolMessageType('VVAddNode', (_message.Message,), {
  'DESCRIPTOR' : _VVADDNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVAddNode)
  })
_sym_db.RegisterMessage(VVAddNode)

VVMulNode = _reflection.GeneratedProtocolMessageType('VVMulNode', (_message.Message,), {
  'DESCRIPTOR' : _VVMULNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVMulNode)
  })
_sym_db.RegisterMessage(VVMulNode)

VVDivNode = _reflection.GeneratedProtocolMessageType('VVDivNode', (_message.Message,), {
  'DESCRIPTOR' : _VVDIVNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVDivNode)
  })
_sym_db.RegisterMessage(VVDivNode)

VVMaxNode = _reflection.GeneratedProtocolMessageType('VVMaxNode', (_message.Message,), {
  'DESCRIPTOR' : _VVMAXNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVMaxNode)
  })
_sym_db.RegisterMessage(VVMaxNode)

VVMinNode = _reflection.GeneratedProtocolMessageType('VVMinNode', (_message.Message,), {
  'DESCRIPTOR' : _VVMINNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVMinNode)
  })
_sym_db.RegisterMessage(VVMinNode)

VVSubNode = _reflection.GeneratedProtocolMessageType('VVSubNode', (_message.Message,), {
  'DESCRIPTOR' : _VVSUBNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VVSubNode)
  })
_sym_db.RegisterMessage(VVSubNode)

IdentityNode = _reflection.GeneratedProtocolMessageType('IdentityNode', (_message.Message,), {
  'DESCRIPTOR' : _IDENTITYNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.IdentityNode)
  })
_sym_db.RegisterMessage(IdentityNode)

ReshapeNode = _reflection.GeneratedProtocolMessageType('ReshapeNode', (_message.Message,), {
  'DESCRIPTOR' : _RESHAPENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ReshapeNode)
  })
_sym_db.RegisterMessage(ReshapeNode)

CastNode = _reflection.GeneratedProtocolMessageType('CastNode', (_message.Message,), {
  'DESCRIPTOR' : _CASTNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.CastNode)
  })
_sym_db.RegisterMessage(CastNode)

BlockDiagonalDepthwiseConv2DReshapeNode = _reflection.GeneratedProtocolMessageType('BlockDiagonalDepthwiseConv2DReshapeNode', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKDIAGONALDEPTHWISECONV2DRESHAPENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.BlockDiagonalDepthwiseConv2DReshapeNode)
  })
_sym_db.RegisterMessage(BlockDiagonalDepthwiseConv2DReshapeNode)

TransposeNode = _reflection.GeneratedProtocolMessageType('TransposeNode', (_message.Message,), {
  'DESCRIPTOR' : _TRANSPOSENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.TransposeNode)
  })
_sym_db.RegisterMessage(TransposeNode)

UnstackNode = _reflection.GeneratedProtocolMessageType('UnstackNode', (_message.Message,), {
  'DESCRIPTOR' : _UNSTACKNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.UnstackNode)
  })
_sym_db.RegisterMessage(UnstackNode)

StackNode = _reflection.GeneratedProtocolMessageType('StackNode', (_message.Message,), {
  'DESCRIPTOR' : _STACKNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.StackNode)
  })
_sym_db.RegisterMessage(StackNode)

ConcatNode = _reflection.GeneratedProtocolMessageType('ConcatNode', (_message.Message,), {
  'DESCRIPTOR' : _CONCATNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ConcatNode)
  })
_sym_db.RegisterMessage(ConcatNode)

SplitNode = _reflection.GeneratedProtocolMessageType('SplitNode', (_message.Message,), {
  'DESCRIPTOR' : _SPLITNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.SplitNode)
  })
_sym_db.RegisterMessage(SplitNode)

ReduceSumNode = _reflection.GeneratedProtocolMessageType('ReduceSumNode', (_message.Message,), {
  'DESCRIPTOR' : _REDUCESUMNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ReduceSumNode)
  })
_sym_db.RegisterMessage(ReduceSumNode)

ExpNode = _reflection.GeneratedProtocolMessageType('ExpNode', (_message.Message,), {
  'DESCRIPTOR' : _EXPNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ExpNode)
  })
_sym_db.RegisterMessage(ExpNode)

CollectHistNode = _reflection.GeneratedProtocolMessageType('CollectHistNode', (_message.Message,), {
  'DESCRIPTOR' : _COLLECTHISTNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.CollectHistNode)
  })
_sym_db.RegisterMessage(CollectHistNode)

QuantizeNode = _reflection.GeneratedProtocolMessageType('QuantizeNode', (_message.Message,), {
  'DESCRIPTOR' : _QUANTIZENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.QuantizeNode)
  })
_sym_db.RegisterMessage(QuantizeNode)

DequantizeNode = _reflection.GeneratedProtocolMessageType('DequantizeNode', (_message.Message,), {
  'DESCRIPTOR' : _DEQUANTIZENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.DequantizeNode)
  })
_sym_db.RegisterMessage(DequantizeNode)

RequantizeNode = _reflection.GeneratedProtocolMessageType('RequantizeNode', (_message.Message,), {
  'DESCRIPTOR' : _REQUANTIZENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.RequantizeNode)
  })
_sym_db.RegisterMessage(RequantizeNode)

PhasifyNode = _reflection.GeneratedProtocolMessageType('PhasifyNode', (_message.Message,), {
  'DESCRIPTOR' : _PHASIFYNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.PhasifyNode)
  })
_sym_db.RegisterMessage(PhasifyNode)

ConstNode = _reflection.GeneratedProtocolMessageType('ConstNode', (_message.Message,), {
  'DESCRIPTOR' : _CONSTNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ConstNode)
  })
_sym_db.RegisterMessage(ConstNode)

VariableNode = _reflection.GeneratedProtocolMessageType('VariableNode', (_message.Message,), {
  'DESCRIPTOR' : _VARIABLENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.VariableNode)
  })
_sym_db.RegisterMessage(VariableNode)

LoadWeightsNode = _reflection.GeneratedProtocolMessageType('LoadWeightsNode', (_message.Message,), {
  'DESCRIPTOR' : _LOADWEIGHTSNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.LoadWeightsNode)
  })
_sym_db.RegisterMessage(LoadWeightsNode)

ApplyWeightsNode = _reflection.GeneratedProtocolMessageType('ApplyWeightsNode', (_message.Message,), {
  'DESCRIPTOR' : _APPLYWEIGHTSNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.ApplyWeightsNode)
  })
_sym_db.RegisterMessage(ApplyWeightsNode)

MoveNode = _reflection.GeneratedProtocolMessageType('MoveNode', (_message.Message,), {
  'DESCRIPTOR' : _MOVENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.MoveNode)
  })
_sym_db.RegisterMessage(MoveNode)

HaltNode = _reflection.GeneratedProtocolMessageType('HaltNode', (_message.Message,), {
  'DESCRIPTOR' : _HALTNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.HaltNode)
  })
_sym_db.RegisterMessage(HaltNode)

NoOpNode = _reflection.GeneratedProtocolMessageType('NoOpNode', (_message.Message,), {
  'DESCRIPTOR' : _NOOPNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.NoOpNode)
  })
_sym_db.RegisterMessage(NoOpNode)

BundleNode = _reflection.GeneratedProtocolMessageType('BundleNode', (_message.Message,), {
  'DESCRIPTOR' : _BUNDLENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.BundleNode)
  })
_sym_db.RegisterMessage(BundleNode)

UpdateVariablesNode = _reflection.GeneratedProtocolMessageType('UpdateVariablesNode', (_message.Message,), {

  'UpdateQuantParams' : _reflection.GeneratedProtocolMessageType('UpdateQuantParams', (_message.Message,), {
    'DESCRIPTOR' : _UPDATEVARIABLESNODE_UPDATEQUANTPARAMS,
    '__module__' : 'sdk2.proto.lgf_pb2'
    # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode.UpdateQuantParams)
    })
  ,

  'UpdateADCScales' : _reflection.GeneratedProtocolMessageType('UpdateADCScales', (_message.Message,), {
    'DESCRIPTOR' : _UPDATEVARIABLESNODE_UPDATEADCSCALES,
    '__module__' : 'sdk2.proto.lgf_pb2'
    # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode.UpdateADCScales)
    })
  ,

  'UpdateInfo' : _reflection.GeneratedProtocolMessageType('UpdateInfo', (_message.Message,), {

    'UpdateType' : _reflection.GeneratedProtocolMessageType('UpdateType', (_message.Message,), {
      'DESCRIPTOR' : _UPDATEVARIABLESNODE_UPDATEINFO_UPDATETYPE,
      '__module__' : 'sdk2.proto.lgf_pb2'
      # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode.UpdateInfo.UpdateType)
      })
    ,

    'VariableMapEntry' : _reflection.GeneratedProtocolMessageType('VariableMapEntry', (_message.Message,), {
      'DESCRIPTOR' : _UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY,
      '__module__' : 'sdk2.proto.lgf_pb2'
      # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode.UpdateInfo.VariableMapEntry)
      })
    ,
    'DESCRIPTOR' : _UPDATEVARIABLESNODE_UPDATEINFO,
    '__module__' : 'sdk2.proto.lgf_pb2'
    # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode.UpdateInfo)
    })
  ,
  'DESCRIPTOR' : _UPDATEVARIABLESNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.UpdateVariablesNode)
  })
_sym_db.RegisterMessage(UpdateVariablesNode)
_sym_db.RegisterMessage(UpdateVariablesNode.UpdateQuantParams)
_sym_db.RegisterMessage(UpdateVariablesNode.UpdateADCScales)
_sym_db.RegisterMessage(UpdateVariablesNode.UpdateInfo)
_sym_db.RegisterMessage(UpdateVariablesNode.UpdateInfo.UpdateType)
_sym_db.RegisterMessage(UpdateVariablesNode.UpdateInfo.VariableMapEntry)

FillNode = _reflection.GeneratedProtocolMessageType('FillNode', (_message.Message,), {
  'DESCRIPTOR' : _FILLNODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.FillNode)
  })
_sym_db.RegisterMessage(FillNode)

TileNode = _reflection.GeneratedProtocolMessageType('TileNode', (_message.Message,), {
  'DESCRIPTOR' : _TILENODE,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.TileNode)
  })
_sym_db.RegisterMessage(TileNode)

QuantizationParameters = _reflection.GeneratedProtocolMessageType('QuantizationParameters', (_message.Message,), {
  'DESCRIPTOR' : _QUANTIZATIONPARAMETERS,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.QuantizationParameters)
  })
_sym_db.RegisterMessage(QuantizationParameters)

EdgeInfo = _reflection.GeneratedProtocolMessageType('EdgeInfo', (_message.Message,), {
  'DESCRIPTOR' : _EDGEINFO,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.EdgeInfo)
  })
_sym_db.RegisterMessage(EdgeInfo)

LNF = _reflection.GeneratedProtocolMessageType('LNF', (_message.Message,), {
  'DESCRIPTOR' : _LNF,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.LNF)
  })
_sym_db.RegisterMessage(LNF)

MetaGraphInfo = _reflection.GeneratedProtocolMessageType('MetaGraphInfo', (_message.Message,), {

  'OriginalGraphInfoEntry' : _reflection.GeneratedProtocolMessageType('OriginalGraphInfoEntry', (_message.Message,), {
    'DESCRIPTOR' : _METAGRAPHINFO_ORIGINALGRAPHINFOENTRY,
    '__module__' : 'sdk2.proto.lgf_pb2'
    # @@protoc_insertion_point(class_scope:light.MetaGraphInfo.OriginalGraphInfoEntry)
    })
  ,
  'DESCRIPTOR' : _METAGRAPHINFO,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.MetaGraphInfo)
  })
_sym_db.RegisterMessage(MetaGraphInfo)
_sym_db.RegisterMessage(MetaGraphInfo.OriginalGraphInfoEntry)

LGF = _reflection.GeneratedProtocolMessageType('LGF', (_message.Message,), {
  'DESCRIPTOR' : _LGF,
  '__module__' : 'sdk2.proto.lgf_pb2'
  # @@protoc_insertion_point(class_scope:light.LGF)
  })
_sym_db.RegisterMessage(LGF)


_ORIGINALNODE_ATTRENTRY._options = None
_UPDATEVARIABLESNODE_UPDATEINFO_VARIABLEMAPENTRY._options = None
_METAGRAPHINFO_ORIGINALGRAPHINFOENTRY._options = None
# @@protoc_insertion_point(module_scope)
