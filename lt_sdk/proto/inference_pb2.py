# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lt_sdk/proto/inference.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from lt_sdk.proto import common_pb2 as lt__sdk_dot_proto_dot_common__pb2
from lt_sdk.proto import lgf_pb2 as lt__sdk_dot_proto_dot_lgf__pb2
from lt_sdk.proto import subgraph_binary_pb2 as lt__sdk_dot_proto_dot_subgraph__binary__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='lt_sdk/proto/inference.proto',
  package='light',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1clt_sdk/proto/inference.proto\x12\x05light\x1a\x19lt_sdk/proto/common.proto\x1a\x16lt_sdk/proto/lgf.proto\x1a\"lt_sdk/proto/subgraph_binary.proto\"N\n\x0bNamedTensor\x12\"\n\tedge_info\x18\x01 \x01(\x0b\x32\x0f.light.EdgeInfo\x12\x1b\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\r.light.Tensor\"4\n\x0eInferenceInput\x12\"\n\x06inputs\x18\x01 \x03(\x0b\x32\x12.light.NamedTensor\"\xdc\x02\n\x10InstructionStats\x12\x15\n\rduration_clks\x18\x01 \x01(\x03\x12\x11\n\tstart_clk\x18\x02 \x01(\x03\x12\n\n\x02pc\x18\x03 \x01(\x03\x12\x11\n\tunit_name\x18\x07 \x03(\t\x12*\n\x0binstruction\x18\x08 \x01(\x0b\x32\x15.light.OPUInstruction\x12\x15\n\rinterconnects\x18\t \x03(\x05\x12\x15\n\rdram_channels\x18\x0b \x03(\x05\x12\x10\n\x08io_ports\x18\x0c \x03(\x05\x12\x0c\n\x04opus\x18\r \x03(\x05\x12\x18\n\x10wavelengths_used\x18\x0e \x01(\x05\x12\x39\n\tchecksums\x18\n \x03(\x0b\x32&.light.InstructionStats.ChecksumsEntry\x1a\x30\n\x0e\x43hecksumsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"j\n\x0e\x45xecutionStats\x12\x14\n\x0ctotal_clocks\x18\x01 \x01(\x03\x12-\n\x0cinstructions\x18\x02 \x03(\x0b\x32\x17.light.InstructionStats\x12\x13\n\x0bnum_samples\x18\x03 \x01(\x05\"\\\n\x0fInferenceOutput\x12#\n\x07results\x18\x01 \x03(\x0b\x32\x12.light.NamedTensor\x12$\n\x05stats\x18\x02 \x01(\x0b\x32\x15.light.ExecutionStats\"?\n\x15\x42\x61tchedInferenceInput\x12&\n\x07\x62\x61tches\x18\x01 \x03(\x0b\x32\x15.light.InferenceInput\"A\n\x16\x42\x61tchedInferenceOutput\x12\'\n\x07\x62\x61tches\x18\x01 \x03(\x0b\x32\x16.light.InferenceOutput\"\x15\n\x13GetInputSpecRequest\"7\n\x14GetInputSpecResponse\x12\x1f\n\x06inputs\x18\x01 \x03(\x0b\x32\x0f.light.EdgeInfo2\xe3\x01\n\x0bLTInference\x12I\n\x0cGetInputSpec\x12\x1a.light.GetInputSpecRequest\x1a\x1b.light.GetInputSpecResponse\"\x00\x12H\n\x07Predict\x12\x1c.light.BatchedInferenceInput\x1a\x1d.light.BatchedInferenceOutput\"\x00\x12?\n\x0cPredictBatch\x12\x15.light.InferenceInput\x1a\x16.light.InferenceOutput\"\x00\x62\x06proto3')
  ,
  dependencies=[lt__sdk_dot_proto_dot_common__pb2.DESCRIPTOR,lt__sdk_dot_proto_dot_lgf__pb2.DESCRIPTOR,lt__sdk_dot_proto_dot_subgraph__binary__pb2.DESCRIPTOR,])




_NAMEDTENSOR = _descriptor.Descriptor(
  name='NamedTensor',
  full_name='light.NamedTensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='edge_info', full_name='light.NamedTensor.edge_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='light.NamedTensor.data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=204,
)


_INFERENCEINPUT = _descriptor.Descriptor(
  name='InferenceInput',
  full_name='light.InferenceInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inputs', full_name='light.InferenceInput.inputs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=258,
)


_INSTRUCTIONSTATS_CHECKSUMSENTRY = _descriptor.Descriptor(
  name='ChecksumsEntry',
  full_name='light.InstructionStats.ChecksumsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='light.InstructionStats.ChecksumsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='light.InstructionStats.ChecksumsEntry.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=561,
  serialized_end=609,
)

_INSTRUCTIONSTATS = _descriptor.Descriptor(
  name='InstructionStats',
  full_name='light.InstructionStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration_clks', full_name='light.InstructionStats.duration_clks', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_clk', full_name='light.InstructionStats.start_clk', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pc', full_name='light.InstructionStats.pc', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit_name', full_name='light.InstructionStats.unit_name', index=3,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='instruction', full_name='light.InstructionStats.instruction', index=4,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interconnects', full_name='light.InstructionStats.interconnects', index=5,
      number=9, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dram_channels', full_name='light.InstructionStats.dram_channels', index=6,
      number=11, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='io_ports', full_name='light.InstructionStats.io_ports', index=7,
      number=12, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='opus', full_name='light.InstructionStats.opus', index=8,
      number=13, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wavelengths_used', full_name='light.InstructionStats.wavelengths_used', index=9,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='checksums', full_name='light.InstructionStats.checksums', index=10,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_INSTRUCTIONSTATS_CHECKSUMSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=261,
  serialized_end=609,
)


_EXECUTIONSTATS = _descriptor.Descriptor(
  name='ExecutionStats',
  full_name='light.ExecutionStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total_clocks', full_name='light.ExecutionStats.total_clocks', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='instructions', full_name='light.ExecutionStats.instructions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_samples', full_name='light.ExecutionStats.num_samples', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=717,
)


_INFERENCEOUTPUT = _descriptor.Descriptor(
  name='InferenceOutput',
  full_name='light.InferenceOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='light.InferenceOutput.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stats', full_name='light.InferenceOutput.stats', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=719,
  serialized_end=811,
)


_BATCHEDINFERENCEINPUT = _descriptor.Descriptor(
  name='BatchedInferenceInput',
  full_name='light.BatchedInferenceInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batches', full_name='light.BatchedInferenceInput.batches', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=813,
  serialized_end=876,
)


_BATCHEDINFERENCEOUTPUT = _descriptor.Descriptor(
  name='BatchedInferenceOutput',
  full_name='light.BatchedInferenceOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batches', full_name='light.BatchedInferenceOutput.batches', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=878,
  serialized_end=943,
)


_GETINPUTSPECREQUEST = _descriptor.Descriptor(
  name='GetInputSpecRequest',
  full_name='light.GetInputSpecRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=945,
  serialized_end=966,
)


_GETINPUTSPECRESPONSE = _descriptor.Descriptor(
  name='GetInputSpecResponse',
  full_name='light.GetInputSpecResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inputs', full_name='light.GetInputSpecResponse.inputs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=968,
  serialized_end=1023,
)

_NAMEDTENSOR.fields_by_name['edge_info'].message_type = lt__sdk_dot_proto_dot_lgf__pb2._EDGEINFO
_NAMEDTENSOR.fields_by_name['data'].message_type = lt__sdk_dot_proto_dot_common__pb2._TENSOR
_INFERENCEINPUT.fields_by_name['inputs'].message_type = _NAMEDTENSOR
_INSTRUCTIONSTATS_CHECKSUMSENTRY.containing_type = _INSTRUCTIONSTATS
_INSTRUCTIONSTATS.fields_by_name['instruction'].message_type = lt__sdk_dot_proto_dot_subgraph__binary__pb2._OPUINSTRUCTION
_INSTRUCTIONSTATS.fields_by_name['checksums'].message_type = _INSTRUCTIONSTATS_CHECKSUMSENTRY
_EXECUTIONSTATS.fields_by_name['instructions'].message_type = _INSTRUCTIONSTATS
_INFERENCEOUTPUT.fields_by_name['results'].message_type = _NAMEDTENSOR
_INFERENCEOUTPUT.fields_by_name['stats'].message_type = _EXECUTIONSTATS
_BATCHEDINFERENCEINPUT.fields_by_name['batches'].message_type = _INFERENCEINPUT
_BATCHEDINFERENCEOUTPUT.fields_by_name['batches'].message_type = _INFERENCEOUTPUT
_GETINPUTSPECRESPONSE.fields_by_name['inputs'].message_type = lt__sdk_dot_proto_dot_lgf__pb2._EDGEINFO
DESCRIPTOR.message_types_by_name['NamedTensor'] = _NAMEDTENSOR
DESCRIPTOR.message_types_by_name['InferenceInput'] = _INFERENCEINPUT
DESCRIPTOR.message_types_by_name['InstructionStats'] = _INSTRUCTIONSTATS
DESCRIPTOR.message_types_by_name['ExecutionStats'] = _EXECUTIONSTATS
DESCRIPTOR.message_types_by_name['InferenceOutput'] = _INFERENCEOUTPUT
DESCRIPTOR.message_types_by_name['BatchedInferenceInput'] = _BATCHEDINFERENCEINPUT
DESCRIPTOR.message_types_by_name['BatchedInferenceOutput'] = _BATCHEDINFERENCEOUTPUT
DESCRIPTOR.message_types_by_name['GetInputSpecRequest'] = _GETINPUTSPECREQUEST
DESCRIPTOR.message_types_by_name['GetInputSpecResponse'] = _GETINPUTSPECRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NamedTensor = _reflection.GeneratedProtocolMessageType('NamedTensor', (_message.Message,), {
  'DESCRIPTOR' : _NAMEDTENSOR,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.NamedTensor)
  })
_sym_db.RegisterMessage(NamedTensor)

InferenceInput = _reflection.GeneratedProtocolMessageType('InferenceInput', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEINPUT,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.InferenceInput)
  })
_sym_db.RegisterMessage(InferenceInput)

InstructionStats = _reflection.GeneratedProtocolMessageType('InstructionStats', (_message.Message,), {

  'ChecksumsEntry' : _reflection.GeneratedProtocolMessageType('ChecksumsEntry', (_message.Message,), {
    'DESCRIPTOR' : _INSTRUCTIONSTATS_CHECKSUMSENTRY,
    '__module__' : 'lt_sdk.proto.inference_pb2'
    # @@protoc_insertion_point(class_scope:light.InstructionStats.ChecksumsEntry)
    })
  ,
  'DESCRIPTOR' : _INSTRUCTIONSTATS,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.InstructionStats)
  })
_sym_db.RegisterMessage(InstructionStats)
_sym_db.RegisterMessage(InstructionStats.ChecksumsEntry)

ExecutionStats = _reflection.GeneratedProtocolMessageType('ExecutionStats', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTIONSTATS,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.ExecutionStats)
  })
_sym_db.RegisterMessage(ExecutionStats)

InferenceOutput = _reflection.GeneratedProtocolMessageType('InferenceOutput', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEOUTPUT,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.InferenceOutput)
  })
_sym_db.RegisterMessage(InferenceOutput)

BatchedInferenceInput = _reflection.GeneratedProtocolMessageType('BatchedInferenceInput', (_message.Message,), {
  'DESCRIPTOR' : _BATCHEDINFERENCEINPUT,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.BatchedInferenceInput)
  })
_sym_db.RegisterMessage(BatchedInferenceInput)

BatchedInferenceOutput = _reflection.GeneratedProtocolMessageType('BatchedInferenceOutput', (_message.Message,), {
  'DESCRIPTOR' : _BATCHEDINFERENCEOUTPUT,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.BatchedInferenceOutput)
  })
_sym_db.RegisterMessage(BatchedInferenceOutput)

GetInputSpecRequest = _reflection.GeneratedProtocolMessageType('GetInputSpecRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETINPUTSPECREQUEST,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.GetInputSpecRequest)
  })
_sym_db.RegisterMessage(GetInputSpecRequest)

GetInputSpecResponse = _reflection.GeneratedProtocolMessageType('GetInputSpecResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETINPUTSPECRESPONSE,
  '__module__' : 'lt_sdk.proto.inference_pb2'
  # @@protoc_insertion_point(class_scope:light.GetInputSpecResponse)
  })
_sym_db.RegisterMessage(GetInputSpecResponse)


_INSTRUCTIONSTATS_CHECKSUMSENTRY._options = None

_LTINFERENCE = _descriptor.ServiceDescriptor(
  name='LTInference',
  full_name='light.LTInference',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1026,
  serialized_end=1253,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetInputSpec',
    full_name='light.LTInference.GetInputSpec',
    index=0,
    containing_service=None,
    input_type=_GETINPUTSPECREQUEST,
    output_type=_GETINPUTSPECRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Predict',
    full_name='light.LTInference.Predict',
    index=1,
    containing_service=None,
    input_type=_BATCHEDINFERENCEINPUT,
    output_type=_BATCHEDINFERENCEOUTPUT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PredictBatch',
    full_name='light.LTInference.PredictBatch',
    index=2,
    containing_service=None,
    input_type=_INFERENCEINPUT,
    output_type=_INFERENCEOUTPUT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LTINFERENCE)

DESCRIPTOR.services_by_name['LTInference'] = _LTINFERENCE

# @@protoc_insertion_point(module_scope)
