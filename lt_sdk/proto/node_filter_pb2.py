# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lt_sdk/proto/node_filter.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from lt_sdk.proto import ops_pb2 as lt__sdk_dot_proto_dot_ops__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='lt_sdk/proto/node_filter.proto',
  package='light',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1elt_sdk/proto/node_filter.proto\x12\x05light\x1a\x16lt_sdk/proto/ops.proto\"\x0c\n\nTrueFilter\"/\n\tAndFilter\x12\"\n\x07\x66ilters\x18\x01 \x03(\x0b\x32\x11.light.NodeFilter\".\n\x08OrFilter\x12\"\n\x07\x66ilters\x18\x01 \x03(\x0b\x32\x11.light.NodeFilter\".\n\tNotFilter\x12!\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\x11.light.NodeFilter\"\x1c\n\x0cNameIsFilter\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1c\n\x0cNameInFilter\x12\x0c\n\x04name\x18\x01 \x01(\t\"&\n\x14NameStartsWithFilter\x12\x0e\n\x06prefix\x18\x01 \x01(\t\"\x10\n\x0eLastNodeFilter\"\x11\n\x0f\x46irstNodeFilter\"\"\n\x08OpFilter\x12\x16\n\x03ops\x18\x01 \x03(\x0e\x32\t.light.Op\"\x15\n\x13SupportedNodeFilter\"\"\n\x10WhichOneofFilter\x12\x0e\n\x06oneofs\x18\x01 \x03(\t\"\xdb\x04\n\nNodeFilter\x12(\n\x0btrue_filter\x18\x0c \x01(\x0b\x32\x11.light.TrueFilterH\x00\x12&\n\nand_filter\x18\x01 \x01(\x0b\x32\x10.light.AndFilterH\x00\x12$\n\tor_filter\x18\x02 \x01(\x0b\x32\x0f.light.OrFilterH\x00\x12&\n\nnot_filter\x18\x03 \x01(\x0b\x32\x10.light.NotFilterH\x00\x12-\n\x0ename_is_filter\x18\x04 \x01(\x0b\x32\x13.light.NameIsFilterH\x00\x12-\n\x0ename_in_filter\x18\x05 \x01(\x0b\x32\x13.light.NameInFilterH\x00\x12>\n\x17name_starts_with_filter\x18\x06 \x01(\x0b\x32\x1b.light.NameStartsWithFilterH\x00\x12\x33\n\x11\x66irst_node_filter\x18\x07 \x01(\x0b\x32\x16.light.FirstNodeFilterH\x00\x12\x31\n\x10last_node_filter\x18\x08 \x01(\x0b\x32\x15.light.LastNodeFilterH\x00\x12$\n\top_filter\x18\t \x01(\x0b\x32\x0f.light.OpFilterH\x00\x12;\n\x15supported_node_filter\x18\n \x01(\x0b\x32\x1a.light.SupportedNodeFilterH\x00\x12\x35\n\x12which_oneof_filter\x18\x0b \x01(\x0b\x32\x17.light.WhichOneofFilterH\x00\x42\r\n\x0bnode_filterb\x06proto3')
  ,
  dependencies=[lt__sdk_dot_proto_dot_ops__pb2.DESCRIPTOR,])




_TRUEFILTER = _descriptor.Descriptor(
  name='TrueFilter',
  full_name='light.TrueFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=77,
)


_ANDFILTER = _descriptor.Descriptor(
  name='AndFilter',
  full_name='light.AndFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filters', full_name='light.AndFilter.filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=126,
)


_ORFILTER = _descriptor.Descriptor(
  name='OrFilter',
  full_name='light.OrFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filters', full_name='light.OrFilter.filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=174,
)


_NOTFILTER = _descriptor.Descriptor(
  name='NotFilter',
  full_name='light.NotFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='light.NotFilter.filter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=222,
)


_NAMEISFILTER = _descriptor.Descriptor(
  name='NameIsFilter',
  full_name='light.NameIsFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='light.NameIsFilter.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=224,
  serialized_end=252,
)


_NAMEINFILTER = _descriptor.Descriptor(
  name='NameInFilter',
  full_name='light.NameInFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='light.NameInFilter.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=254,
  serialized_end=282,
)


_NAMESTARTSWITHFILTER = _descriptor.Descriptor(
  name='NameStartsWithFilter',
  full_name='light.NameStartsWithFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='light.NameStartsWithFilter.prefix', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=284,
  serialized_end=322,
)


_LASTNODEFILTER = _descriptor.Descriptor(
  name='LastNodeFilter',
  full_name='light.LastNodeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=324,
  serialized_end=340,
)


_FIRSTNODEFILTER = _descriptor.Descriptor(
  name='FirstNodeFilter',
  full_name='light.FirstNodeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=359,
)


_OPFILTER = _descriptor.Descriptor(
  name='OpFilter',
  full_name='light.OpFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ops', full_name='light.OpFilter.ops', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=361,
  serialized_end=395,
)


_SUPPORTEDNODEFILTER = _descriptor.Descriptor(
  name='SupportedNodeFilter',
  full_name='light.SupportedNodeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=397,
  serialized_end=418,
)


_WHICHONEOFFILTER = _descriptor.Descriptor(
  name='WhichOneofFilter',
  full_name='light.WhichOneofFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='oneofs', full_name='light.WhichOneofFilter.oneofs', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=420,
  serialized_end=454,
)


_NODEFILTER = _descriptor.Descriptor(
  name='NodeFilter',
  full_name='light.NodeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='true_filter', full_name='light.NodeFilter.true_filter', index=0,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='and_filter', full_name='light.NodeFilter.and_filter', index=1,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or_filter', full_name='light.NodeFilter.or_filter', index=2,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_filter', full_name='light.NodeFilter.not_filter', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name_is_filter', full_name='light.NodeFilter.name_is_filter', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name_in_filter', full_name='light.NodeFilter.name_in_filter', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name_starts_with_filter', full_name='light.NodeFilter.name_starts_with_filter', index=6,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='first_node_filter', full_name='light.NodeFilter.first_node_filter', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_node_filter', full_name='light.NodeFilter.last_node_filter', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='op_filter', full_name='light.NodeFilter.op_filter', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='supported_node_filter', full_name='light.NodeFilter.supported_node_filter', index=10,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='which_oneof_filter', full_name='light.NodeFilter.which_oneof_filter', index=11,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='node_filter', full_name='light.NodeFilter.node_filter',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=457,
  serialized_end=1060,
)

_ANDFILTER.fields_by_name['filters'].message_type = _NODEFILTER
_ORFILTER.fields_by_name['filters'].message_type = _NODEFILTER
_NOTFILTER.fields_by_name['filter'].message_type = _NODEFILTER
_OPFILTER.fields_by_name['ops'].enum_type = lt__sdk_dot_proto_dot_ops__pb2._OP
_NODEFILTER.fields_by_name['true_filter'].message_type = _TRUEFILTER
_NODEFILTER.fields_by_name['and_filter'].message_type = _ANDFILTER
_NODEFILTER.fields_by_name['or_filter'].message_type = _ORFILTER
_NODEFILTER.fields_by_name['not_filter'].message_type = _NOTFILTER
_NODEFILTER.fields_by_name['name_is_filter'].message_type = _NAMEISFILTER
_NODEFILTER.fields_by_name['name_in_filter'].message_type = _NAMEINFILTER
_NODEFILTER.fields_by_name['name_starts_with_filter'].message_type = _NAMESTARTSWITHFILTER
_NODEFILTER.fields_by_name['first_node_filter'].message_type = _FIRSTNODEFILTER
_NODEFILTER.fields_by_name['last_node_filter'].message_type = _LASTNODEFILTER
_NODEFILTER.fields_by_name['op_filter'].message_type = _OPFILTER
_NODEFILTER.fields_by_name['supported_node_filter'].message_type = _SUPPORTEDNODEFILTER
_NODEFILTER.fields_by_name['which_oneof_filter'].message_type = _WHICHONEOFFILTER
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['true_filter'])
_NODEFILTER.fields_by_name['true_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['and_filter'])
_NODEFILTER.fields_by_name['and_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['or_filter'])
_NODEFILTER.fields_by_name['or_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['not_filter'])
_NODEFILTER.fields_by_name['not_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['name_is_filter'])
_NODEFILTER.fields_by_name['name_is_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['name_in_filter'])
_NODEFILTER.fields_by_name['name_in_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['name_starts_with_filter'])
_NODEFILTER.fields_by_name['name_starts_with_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['first_node_filter'])
_NODEFILTER.fields_by_name['first_node_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['last_node_filter'])
_NODEFILTER.fields_by_name['last_node_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['op_filter'])
_NODEFILTER.fields_by_name['op_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['supported_node_filter'])
_NODEFILTER.fields_by_name['supported_node_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
_NODEFILTER.oneofs_by_name['node_filter'].fields.append(
  _NODEFILTER.fields_by_name['which_oneof_filter'])
_NODEFILTER.fields_by_name['which_oneof_filter'].containing_oneof = _NODEFILTER.oneofs_by_name['node_filter']
DESCRIPTOR.message_types_by_name['TrueFilter'] = _TRUEFILTER
DESCRIPTOR.message_types_by_name['AndFilter'] = _ANDFILTER
DESCRIPTOR.message_types_by_name['OrFilter'] = _ORFILTER
DESCRIPTOR.message_types_by_name['NotFilter'] = _NOTFILTER
DESCRIPTOR.message_types_by_name['NameIsFilter'] = _NAMEISFILTER
DESCRIPTOR.message_types_by_name['NameInFilter'] = _NAMEINFILTER
DESCRIPTOR.message_types_by_name['NameStartsWithFilter'] = _NAMESTARTSWITHFILTER
DESCRIPTOR.message_types_by_name['LastNodeFilter'] = _LASTNODEFILTER
DESCRIPTOR.message_types_by_name['FirstNodeFilter'] = _FIRSTNODEFILTER
DESCRIPTOR.message_types_by_name['OpFilter'] = _OPFILTER
DESCRIPTOR.message_types_by_name['SupportedNodeFilter'] = _SUPPORTEDNODEFILTER
DESCRIPTOR.message_types_by_name['WhichOneofFilter'] = _WHICHONEOFFILTER
DESCRIPTOR.message_types_by_name['NodeFilter'] = _NODEFILTER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TrueFilter = _reflection.GeneratedProtocolMessageType('TrueFilter', (_message.Message,), {
  'DESCRIPTOR' : _TRUEFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.TrueFilter)
  })
_sym_db.RegisterMessage(TrueFilter)

AndFilter = _reflection.GeneratedProtocolMessageType('AndFilter', (_message.Message,), {
  'DESCRIPTOR' : _ANDFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.AndFilter)
  })
_sym_db.RegisterMessage(AndFilter)

OrFilter = _reflection.GeneratedProtocolMessageType('OrFilter', (_message.Message,), {
  'DESCRIPTOR' : _ORFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.OrFilter)
  })
_sym_db.RegisterMessage(OrFilter)

NotFilter = _reflection.GeneratedProtocolMessageType('NotFilter', (_message.Message,), {
  'DESCRIPTOR' : _NOTFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.NotFilter)
  })
_sym_db.RegisterMessage(NotFilter)

NameIsFilter = _reflection.GeneratedProtocolMessageType('NameIsFilter', (_message.Message,), {
  'DESCRIPTOR' : _NAMEISFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.NameIsFilter)
  })
_sym_db.RegisterMessage(NameIsFilter)

NameInFilter = _reflection.GeneratedProtocolMessageType('NameInFilter', (_message.Message,), {
  'DESCRIPTOR' : _NAMEINFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.NameInFilter)
  })
_sym_db.RegisterMessage(NameInFilter)

NameStartsWithFilter = _reflection.GeneratedProtocolMessageType('NameStartsWithFilter', (_message.Message,), {
  'DESCRIPTOR' : _NAMESTARTSWITHFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.NameStartsWithFilter)
  })
_sym_db.RegisterMessage(NameStartsWithFilter)

LastNodeFilter = _reflection.GeneratedProtocolMessageType('LastNodeFilter', (_message.Message,), {
  'DESCRIPTOR' : _LASTNODEFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.LastNodeFilter)
  })
_sym_db.RegisterMessage(LastNodeFilter)

FirstNodeFilter = _reflection.GeneratedProtocolMessageType('FirstNodeFilter', (_message.Message,), {
  'DESCRIPTOR' : _FIRSTNODEFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.FirstNodeFilter)
  })
_sym_db.RegisterMessage(FirstNodeFilter)

OpFilter = _reflection.GeneratedProtocolMessageType('OpFilter', (_message.Message,), {
  'DESCRIPTOR' : _OPFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.OpFilter)
  })
_sym_db.RegisterMessage(OpFilter)

SupportedNodeFilter = _reflection.GeneratedProtocolMessageType('SupportedNodeFilter', (_message.Message,), {
  'DESCRIPTOR' : _SUPPORTEDNODEFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.SupportedNodeFilter)
  })
_sym_db.RegisterMessage(SupportedNodeFilter)

WhichOneofFilter = _reflection.GeneratedProtocolMessageType('WhichOneofFilter', (_message.Message,), {
  'DESCRIPTOR' : _WHICHONEOFFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.WhichOneofFilter)
  })
_sym_db.RegisterMessage(WhichOneofFilter)

NodeFilter = _reflection.GeneratedProtocolMessageType('NodeFilter', (_message.Message,), {
  'DESCRIPTOR' : _NODEFILTER,
  '__module__' : 'lt_sdk.proto.node_filter_pb2'
  # @@protoc_insertion_point(class_scope:light.NodeFilter)
  })
_sym_db.RegisterMessage(NodeFilter)


# @@protoc_insertion_point(module_scope)
